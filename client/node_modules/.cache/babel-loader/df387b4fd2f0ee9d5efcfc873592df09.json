{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar defer = require('pull-defer/duplex');\n\nmodule.exports = /*#__PURE__*/function () {\n  function Connection(conn, info) {\n    _classCallCheck(this, Connection);\n\n    this.peerInfo = null;\n    this.conn = defer();\n\n    if (conn) {\n      this.setInnerConn(conn, info);\n    } else if (info) {\n      this.info = info;\n    }\n  }\n\n  _createClass(Connection, [{\n    key: \"source\",\n    get: function get() {\n      return this.conn.source;\n    }\n  }, {\n    key: \"sink\",\n    get: function get() {\n      return this.conn.sink;\n    }\n  }, {\n    key: \"getPeerInfo\",\n    value: function getPeerInfo(callback) {\n      if (this.info && this.info.getPeerInfo) {\n        return this.info.getPeerInfo(callback);\n      }\n\n      if (!this.peerInfo) {\n        return callback(new Error('Peer Info not set yet'));\n      }\n\n      callback(null, this.peerInfo);\n    }\n  }, {\n    key: \"setPeerInfo\",\n    value: function setPeerInfo(peerInfo) {\n      if (this.info && this.info.setPeerInfo) {\n        return this.info.setPeerInfo(peerInfo);\n      }\n\n      this.peerInfo = peerInfo;\n    }\n  }, {\n    key: \"getObservedAddrs\",\n    value: function getObservedAddrs(callback) {\n      if (this.info && this.info.getObservedAddrs) {\n        return this.info.getObservedAddrs(callback);\n      }\n\n      callback(null, []);\n    }\n  }, {\n    key: \"setInnerConn\",\n    value: function setInnerConn(conn, info) {\n      this.conn.resolve(conn);\n\n      if (info) {\n        this.info = info;\n      } else {\n        this.info = conn;\n      }\n    }\n  }]);\n\n  return Connection;\n}();","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/interface-connection/src/connection.js"],"names":["defer","require","module","exports","conn","info","peerInfo","setInnerConn","source","sink","callback","getPeerInfo","Error","setPeerInfo","getObservedAddrs","resolve"],"mappings":"AAAA;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP;AACE,sBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AACvB,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKF,IAAL,GAAYJ,KAAK,EAAjB;;AAEA,QAAII,IAAJ,EAAU;AACR,WAAKG,YAAL,CAAkBH,IAAlB,EAAwBC,IAAxB;AACD,KAFD,MAEO,IAAIA,IAAJ,EAAU;AACf,WAAKA,IAAL,GAAYA,IAAZ;AACD;AACF;;AAVH;AAAA;AAAA,SAYE,eAAc;AACZ,aAAO,KAAKD,IAAL,CAAUI,MAAjB;AACD;AAdH;AAAA;AAAA,SAgBE,eAAY;AACV,aAAO,KAAKJ,IAAL,CAAUK,IAAjB;AACD;AAlBH;AAAA;AAAA,WAoBE,qBAAaC,QAAb,EAAuB;AACrB,UAAI,KAAKL,IAAL,IAAa,KAAKA,IAAL,CAAUM,WAA3B,EAAwC;AACtC,eAAO,KAAKN,IAAL,CAAUM,WAAV,CAAsBD,QAAtB,CAAP;AACD;;AAED,UAAI,CAAC,KAAKJ,QAAV,EAAoB;AAClB,eAAOI,QAAQ,CAAC,IAAIE,KAAJ,CAAU,uBAAV,CAAD,CAAf;AACD;;AAEDF,MAAAA,QAAQ,CAAC,IAAD,EAAO,KAAKJ,QAAZ,CAAR;AACD;AA9BH;AAAA;AAAA,WAgCE,qBAAaA,QAAb,EAAuB;AACrB,UAAI,KAAKD,IAAL,IAAa,KAAKA,IAAL,CAAUQ,WAA3B,EAAwC;AACtC,eAAO,KAAKR,IAAL,CAAUQ,WAAV,CAAsBP,QAAtB,CAAP;AACD;;AAED,WAAKA,QAAL,GAAgBA,QAAhB;AACD;AAtCH;AAAA;AAAA,WAwCE,0BAAkBI,QAAlB,EAA4B;AAC1B,UAAI,KAAKL,IAAL,IAAa,KAAKA,IAAL,CAAUS,gBAA3B,EAA6C;AAC3C,eAAO,KAAKT,IAAL,CAAUS,gBAAV,CAA2BJ,QAA3B,CAAP;AACD;;AACDA,MAAAA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD;AA7CH;AAAA;AAAA,WA+CE,sBAAcN,IAAd,EAAoBC,IAApB,EAA0B;AACxB,WAAKD,IAAL,CAAUW,OAAV,CAAkBX,IAAlB;;AACA,UAAIC,IAAJ,EAAU;AACR,aAAKA,IAAL,GAAYA,IAAZ;AACD,OAFD,MAEO;AACL,aAAKA,IAAL,GAAYD,IAAZ;AACD;AACF;AAtDH;;AAAA;AAAA","sourcesContent":["'use strict'\n\nconst defer = require('pull-defer/duplex')\n\nmodule.exports = class Connection {\n  constructor (conn, info) {\n    this.peerInfo = null\n    this.conn = defer()\n\n    if (conn) {\n      this.setInnerConn(conn, info)\n    } else if (info) {\n      this.info = info\n    }\n  }\n\n  get source () {\n    return this.conn.source\n  }\n\n  get sink () {\n    return this.conn.sink\n  }\n\n  getPeerInfo (callback) {\n    if (this.info && this.info.getPeerInfo) {\n      return this.info.getPeerInfo(callback)\n    }\n\n    if (!this.peerInfo) {\n      return callback(new Error('Peer Info not set yet'))\n    }\n\n    callback(null, this.peerInfo)\n  }\n\n  setPeerInfo (peerInfo) {\n    if (this.info && this.info.setPeerInfo) {\n      return this.info.setPeerInfo(peerInfo)\n    }\n\n    this.peerInfo = peerInfo\n  }\n\n  getObservedAddrs (callback) {\n    if (this.info && this.info.getObservedAddrs) {\n      return this.info.getObservedAddrs(callback)\n    }\n    callback(null, [])\n  }\n\n  setInnerConn (conn, info) {\n    this.conn.resolve(conn)\n    if (info) {\n      this.info = info\n    } else {\n      this.info = conn\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}