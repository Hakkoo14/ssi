{"ast":null,"code":"'use strict';\n\nvar errCode = require('err-code');\n\nmodule.exports = {\n  CONNECTION_FAILED: function CONNECTION_FAILED(err) {\n    return errCode(err, 'CONNECTION_FAILED');\n  },\n  DIAL_ABORTED: function DIAL_ABORTED() {\n    return errCode('Dial was aborted', 'DIAL_ABORTED');\n  },\n  ERR_BLACKLISTED: function ERR_BLACKLISTED() {\n    return errCode('Dial is currently blacklisted for this peer', 'ERR_BLACKLISTED');\n  },\n  DIAL_SELF: function DIAL_SELF() {\n    return errCode('A node cannot dial itself', 'DIAL_SELF');\n  },\n  INVALID_STATE_TRANSITION: function INVALID_STATE_TRANSITION(err) {\n    return errCode(err, 'INVALID_STATE_TRANSITION');\n  },\n  NO_TRANSPORTS_REGISTERED: function NO_TRANSPORTS_REGISTERED() {\n    return errCode('No transports registered, dial not possible', 'NO_TRANSPORTS_REGISTERED');\n  },\n  PROTECTOR_REQUIRED: function PROTECTOR_REQUIRED() {\n    return errCode('No protector provided with private network enforced', 'PROTECTOR_REQUIRED');\n  },\n  UNEXPECTED_END: function UNEXPECTED_END() {\n    return errCode('Unexpected end of input from reader.', 'UNEXPECTED_END');\n  },\n  maybeUnexpectedEnd: function maybeUnexpectedEnd(err) {\n    if (err === true) {\n      return module.exports.UNEXPECTED_END();\n    }\n\n    return err;\n  }\n};","map":{"version":3,"sources":["C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/libp2p-switch/src/errors.js"],"names":["errCode","require","module","exports","CONNECTION_FAILED","err","DIAL_ABORTED","ERR_BLACKLISTED","DIAL_SELF","INVALID_STATE_TRANSITION","NO_TRANSPORTS_REGISTERED","PROTECTOR_REQUIRED","UNEXPECTED_END","maybeUnexpectedEnd"],"mappings":"AAAA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,iBAAiB,EAAE,2BAACC,GAAD;AAAA,WAASL,OAAO,CAACK,GAAD,EAAM,mBAAN,CAAhB;AAAA,GADJ;AAEfC,EAAAA,YAAY,EAAE;AAAA,WAAMN,OAAO,CAAC,kBAAD,EAAqB,cAArB,CAAb;AAAA,GAFC;AAGfO,EAAAA,eAAe,EAAE;AAAA,WAAMP,OAAO,CAAC,6CAAD,EAAgD,iBAAhD,CAAb;AAAA,GAHF;AAIfQ,EAAAA,SAAS,EAAE;AAAA,WAAMR,OAAO,CAAC,2BAAD,EAA8B,WAA9B,CAAb;AAAA,GAJI;AAKfS,EAAAA,wBAAwB,EAAE,kCAACJ,GAAD;AAAA,WAASL,OAAO,CAACK,GAAD,EAAM,0BAAN,CAAhB;AAAA,GALX;AAMfK,EAAAA,wBAAwB,EAAE;AAAA,WAAMV,OAAO,CAAC,6CAAD,EAAgD,0BAAhD,CAAb;AAAA,GANX;AAOfW,EAAAA,kBAAkB,EAAE;AAAA,WAAMX,OAAO,CAAC,qDAAD,EAAwD,oBAAxD,CAAb;AAAA,GAPL;AAQfY,EAAAA,cAAc,EAAE;AAAA,WAAMZ,OAAO,CAAC,sCAAD,EAAyC,gBAAzC,CAAb;AAAA,GARD;AASfa,EAAAA,kBAAkB,EAAE,4BAACR,GAAD,EAAS;AAC3B,QAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,aAAOH,MAAM,CAACC,OAAP,CAAeS,cAAf,EAAP;AACD;;AACD,WAAOP,GAAP;AACD;AAdc,CAAjB","sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\n\nmodule.exports = {\n  CONNECTION_FAILED: (err) => errCode(err, 'CONNECTION_FAILED'),\n  DIAL_ABORTED: () => errCode('Dial was aborted', 'DIAL_ABORTED'),\n  ERR_BLACKLISTED: () => errCode('Dial is currently blacklisted for this peer', 'ERR_BLACKLISTED'),\n  DIAL_SELF: () => errCode('A node cannot dial itself', 'DIAL_SELF'),\n  INVALID_STATE_TRANSITION: (err) => errCode(err, 'INVALID_STATE_TRANSITION'),\n  NO_TRANSPORTS_REGISTERED: () => errCode('No transports registered, dial not possible', 'NO_TRANSPORTS_REGISTERED'),\n  PROTECTOR_REQUIRED: () => errCode('No protector provided with private network enforced', 'PROTECTOR_REQUIRED'),\n  UNEXPECTED_END: () => errCode('Unexpected end of input from reader.', 'UNEXPECTED_END'),\n  maybeUnexpectedEnd: (err) => {\n    if (err === true) {\n      return module.exports.UNEXPECTED_END()\n    }\n    return err\n  }\n}\n"]},"metadata":{},"sourceType":"script"}