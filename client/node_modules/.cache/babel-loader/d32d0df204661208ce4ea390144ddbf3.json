{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar handshake = require('pull-handshake');\n\nvar deferred = require('pull-defer');\n\nvar State = /*#__PURE__*/function () {\n  function State(localId, remoteId, timeout, callback) {\n    _classCallCheck(this, State);\n\n    if (typeof timeout === 'function') {\n      callback = timeout;\n      timeout = undefined;\n    }\n\n    this.setup();\n    this.id.local = localId; // TODO use remoteId to verify PeersIdentity\n\n    this.id.remote = remoteId;\n    this.key.local = localId.privKey;\n    this.timeout = timeout || 60 * 1000;\n\n    callback = callback || function () {};\n\n    this.secure = deferred.duplex();\n    this.stream = handshake({\n      timeout: this.timeout\n    }, callback);\n    this.shake = this.stream.handshake;\n    delete this.stream.handshake;\n  }\n\n  _createClass(State, [{\n    key: \"setup\",\n    value: function setup() {\n      this.id = {\n        local: null,\n        remote: null\n      };\n      this.key = {\n        local: null,\n        remote: null\n      };\n      this.shake = null;\n      this.cleanSecrets();\n    } // remove all data from the handshake that is not needed anymore\n\n  }, {\n    key: \"cleanSecrets\",\n    value: function cleanSecrets() {\n      this.shared = {};\n      this.ephemeralKey = {\n        local: null,\n        remote: null\n      };\n      this.proposal = {\n        in: null,\n        out: null\n      };\n      this.proposalEncoded = {\n        in: null,\n        out: null\n      };\n      this.protocols = {\n        local: null,\n        remote: null\n      };\n      this.exchange = {\n        in: null,\n        out: null\n      };\n    }\n  }]);\n\n  return State;\n}();\n\nmodule.exports = State;","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/libp2p-secio/src/state.js"],"names":["handshake","require","deferred","State","localId","remoteId","timeout","callback","undefined","setup","id","local","remote","key","privKey","secure","duplex","stream","shake","cleanSecrets","shared","ephemeralKey","proposal","in","out","proposalEncoded","protocols","exchange","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;IAEME,K;AACJ,iBAAaC,OAAb,EAAsBC,QAAtB,EAAgCC,OAAhC,EAAyCC,QAAzC,EAAmD;AAAA;;AACjD,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAGE,SAAV;AACD;;AAED,SAAKC,KAAL;AAEA,SAAKC,EAAL,CAAQC,KAAR,GAAgBP,OAAhB,CARiD,CASjD;;AACA,SAAKM,EAAL,CAAQE,MAAR,GAAiBP,QAAjB;AACA,SAAKQ,GAAL,CAASF,KAAT,GAAiBP,OAAO,CAACU,OAAzB;AACA,SAAKR,OAAL,GAAeA,OAAO,IAAI,KAAK,IAA/B;;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,IAAK,YAAM,CAAE,CAAhC;;AAEA,SAAKQ,MAAL,GAAcb,QAAQ,CAACc,MAAT,EAAd;AACA,SAAKC,MAAL,GAAcjB,SAAS,CAAC;AAAEM,MAAAA,OAAO,EAAE,KAAKA;AAAhB,KAAD,EAA4BC,QAA5B,CAAvB;AACA,SAAKW,KAAL,GAAa,KAAKD,MAAL,CAAYjB,SAAzB;AACA,WAAO,KAAKiB,MAAL,CAAYjB,SAAnB;AACD;;;;WAED,iBAAS;AACP,WAAKU,EAAL,GAAU;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAV;AACA,WAAKC,GAAL,GAAW;AAAEF,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAX;AACA,WAAKM,KAAL,GAAa,IAAb;AACA,WAAKC,YAAL;AACD,K,CAED;;;;WACA,wBAAgB;AACd,WAAKC,MAAL,GAAc,EAAd;AAEA,WAAKC,YAAL,GAAoB;AAAEV,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAApB;AACA,WAAKU,QAAL,GAAgB;AAAEC,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,GAAG,EAAE;AAAjB,OAAhB;AACA,WAAKC,eAAL,GAAuB;AAAEF,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,GAAG,EAAE;AAAjB,OAAvB;AACA,WAAKE,SAAL,GAAiB;AAAEf,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAjB;AACA,WAAKe,QAAL,GAAgB;AAAEJ,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,GAAG,EAAE;AAAjB,OAAhB;AACD;;;;;;AAGHI,MAAM,CAACC,OAAP,GAAiB1B,KAAjB","sourcesContent":["'use strict'\n\nconst handshake = require('pull-handshake')\nconst deferred = require('pull-defer')\n\nclass State {\n  constructor (localId, remoteId, timeout, callback) {\n    if (typeof timeout === 'function') {\n      callback = timeout\n      timeout = undefined\n    }\n\n    this.setup()\n\n    this.id.local = localId\n    // TODO use remoteId to verify PeersIdentity\n    this.id.remote = remoteId\n    this.key.local = localId.privKey\n    this.timeout = timeout || 60 * 1000\n    callback = callback || (() => {})\n\n    this.secure = deferred.duplex()\n    this.stream = handshake({ timeout: this.timeout }, callback)\n    this.shake = this.stream.handshake\n    delete this.stream.handshake\n  }\n\n  setup () {\n    this.id = { local: null, remote: null }\n    this.key = { local: null, remote: null }\n    this.shake = null\n    this.cleanSecrets()\n  }\n\n  // remove all data from the handshake that is not needed anymore\n  cleanSecrets () {\n    this.shared = {}\n\n    this.ephemeralKey = { local: null, remote: null }\n    this.proposal = { in: null, out: null }\n    this.proposalEncoded = { in: null, out: null }\n    this.protocols = { local: null, remote: null }\n    this.exchange = { in: null, out: null }\n  }\n}\n\nmodule.exports = State\n"]},"metadata":{},"sourceType":"script"}