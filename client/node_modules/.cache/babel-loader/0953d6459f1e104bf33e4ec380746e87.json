{"ast":null,"code":"'use strict';\n\nvar nextTick = require('async/nextTick');\n\nvar errCode = require('err-code');\n\nvar _require = require('./errors'),\n    messages = _require.messages,\n    codes = _require.codes;\n\nmodule.exports = function (node) {\n  return {\n    put: function put(key, value, callback) {\n      if (!node._dht) {\n        return nextTick(callback, errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED));\n      }\n\n      node._dht.put(key, value, callback);\n    },\n    get: function get(key, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      if (!node._dht) {\n        return nextTick(callback, errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED));\n      }\n\n      node._dht.get(key, options, callback);\n    },\n    getMany: function getMany(key, nVals, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      if (!node._dht) {\n        return nextTick(callback, errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED));\n      }\n\n      node._dht.getMany(key, nVals, options, callback);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/libp2p/src/dht.js"],"names":["nextTick","require","errCode","messages","codes","module","exports","node","put","key","value","callback","_dht","Error","DHT_DISABLED","get","options","getMany","nVals"],"mappings":"AAAA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AAEA,eAA4BA,OAAO,CAAC,UAAD,CAAnC;AAAA,IAAQE,QAAR,YAAQA,QAAR;AAAA,IAAkBC,KAAlB,YAAkBA,KAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAO;AACLC,IAAAA,GAAG,EAAE,aAACC,GAAD,EAAMC,KAAN,EAAaC,QAAb,EAA0B;AAC7B,UAAI,CAACJ,IAAI,CAACK,IAAV,EAAgB;AACd,eAAOZ,QAAQ,CAACW,QAAD,EAAWT,OAAO,CAAC,IAAIW,KAAJ,CAAUV,QAAQ,CAACW,YAAnB,CAAD,EAAmCV,KAAK,CAACU,YAAzC,CAAlB,CAAf;AACD;;AAEDP,MAAAA,IAAI,CAACK,IAAL,CAAUJ,GAAV,CAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,QAA1B;AACD,KAPI;AAQLI,IAAAA,GAAG,EAAE,aAACN,GAAD,EAAMO,OAAN,EAAeL,QAAf,EAA4B;AAC/B,UAAI,OAAOK,OAAP,KAAmB,UAAvB,EAAmC;AACjCL,QAAAA,QAAQ,GAAGK,OAAX;AACAA,QAAAA,OAAO,GAAG,EAAV;AACD;;AAED,UAAI,CAACT,IAAI,CAACK,IAAV,EAAgB;AACd,eAAOZ,QAAQ,CAACW,QAAD,EAAWT,OAAO,CAAC,IAAIW,KAAJ,CAAUV,QAAQ,CAACW,YAAnB,CAAD,EAAmCV,KAAK,CAACU,YAAzC,CAAlB,CAAf;AACD;;AAEDP,MAAAA,IAAI,CAACK,IAAL,CAAUG,GAAV,CAAcN,GAAd,EAAmBO,OAAnB,EAA4BL,QAA5B;AACD,KAnBI;AAoBLM,IAAAA,OAAO,EAAE,iBAACR,GAAD,EAAMS,KAAN,EAAaF,OAAb,EAAsBL,QAAtB,EAAmC;AAC1C,UAAI,OAAOK,OAAP,KAAmB,UAAvB,EAAmC;AACjCL,QAAAA,QAAQ,GAAGK,OAAX;AACAA,QAAAA,OAAO,GAAG,EAAV;AACD;;AAED,UAAI,CAACT,IAAI,CAACK,IAAV,EAAgB;AACd,eAAOZ,QAAQ,CAACW,QAAD,EAAWT,OAAO,CAAC,IAAIW,KAAJ,CAAUV,QAAQ,CAACW,YAAnB,CAAD,EAAmCV,KAAK,CAACU,YAAzC,CAAlB,CAAf;AACD;;AAEDP,MAAAA,IAAI,CAACK,IAAL,CAAUK,OAAV,CAAkBR,GAAlB,EAAuBS,KAAvB,EAA8BF,OAA9B,EAAuCL,QAAvC;AACD;AA/BI,GAAP;AAiCD,CAlCD","sourcesContent":["'use strict'\n\nconst nextTick = require('async/nextTick')\nconst errCode = require('err-code')\n\nconst { messages, codes } = require('./errors')\n\nmodule.exports = (node) => {\n  return {\n    put: (key, value, callback) => {\n      if (!node._dht) {\n        return nextTick(callback, errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED))\n      }\n\n      node._dht.put(key, value, callback)\n    },\n    get: (key, options, callback) => {\n      if (typeof options === 'function') {\n        callback = options\n        options = {}\n      }\n\n      if (!node._dht) {\n        return nextTick(callback, errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED))\n      }\n\n      node._dht.get(key, options, callback)\n    },\n    getMany: (key, nVals, options, callback) => {\n      if (typeof options === 'function') {\n        callback = options\n        options = {}\n      }\n\n      if (!node._dht) {\n        return nextTick(callback, errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED))\n      }\n\n      node._dht.getMany(key, nVals, options, callback)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}