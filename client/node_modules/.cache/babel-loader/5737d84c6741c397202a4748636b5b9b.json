{"ast":null,"code":"var _defineProperty = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar getIterator = require('get-iterator');\n\nvar toIterable = require('pull-stream-to-async-iterator');\n\nfunction toPull(source) {\n  source = getIterator(source);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(end, cb) {\n      var next;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!end) {\n                _context.next = 11;\n                break;\n              }\n\n              if (!source.return) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return source.return();\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", cb(_context.t0));\n\n            case 10:\n              return _context.abrupt(\"return\", cb(end));\n\n            case 11:\n              _context.prev = 11;\n              _context.next = 14;\n              return source.next();\n\n            case 14:\n              next = _context.sent;\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t1 = _context[\"catch\"](11);\n              return _context.abrupt(\"return\", cb(_context.t1));\n\n            case 20:\n              if (!next.done) {\n                _context.next = 22;\n                break;\n              }\n\n              return _context.abrupt(\"return\", cb(true));\n\n            case 22:\n              // eslint-disable-line\n              cb(null, next.value);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 7], [11, 17]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\ntoPull.source = toPull;\n\ntoPull.transform = toPull.through = function (source) {\n  return function (read) {\n    return toPull(source(toIterable(read)));\n  };\n};\n\ntoPull.duplex = function (duplex) {\n  return {\n    sink: toPull.sink(duplex.sink),\n    source: toPull(duplex.source)\n  };\n};\n\ntoPull.sink = function (sink) {\n  return function (read) {\n    var _sink;\n\n    sink((_sink = {}, _defineProperty(_sink, Symbol.asyncIterator, function () {\n      return this;\n    }), _defineProperty(_sink, \"next\", function next() {\n      return new Promise(function (resolve, reject) {\n        read(null, function (end, value) {\n          if (end === true) return resolve({\n            done: true,\n            value: value\n          });\n          if (end) return reject(end);\n          resolve({\n            done: false,\n            value: value\n          });\n        });\n      });\n    }), _defineProperty(_sink, \"return\", function _return() {\n      return new Promise(function (resolve, reject) {\n        read(true, function (end, value) {\n          if (end && end !== true) return reject(end);\n          resolve({\n            done: true,\n            value: value\n          });\n        });\n      });\n    }), _defineProperty(_sink, \"throw\", function _throw(err) {\n      return new Promise(function (resolve, reject) {\n        read(err, function (end, value) {\n          if (end && end !== true) return reject(end);\n          resolve({\n            done: true,\n            value: value\n          });\n        });\n      });\n    }), _sink));\n  };\n};\n\nmodule.exports = toPull;","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/async-iterator-to-pull-stream/index.js"],"names":["getIterator","require","toIterable","toPull","source","end","cb","return","next","done","value","transform","through","read","duplex","sink","Symbol","asyncIterator","Promise","resolve","reject","err","module","exports"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,+BAAD,CAA1B;;AAEA,SAASE,MAAT,CAAiBC,MAAjB,EAAyB;AACvBA,EAAAA,MAAM,GAAGJ,WAAW,CAACI,MAAD,CAApB;AAEA;AAAA,wEAAO,iBAAOC,GAAP,EAAYC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDD,GADC;AAAA;AAAA;AAAA;;AAAA,mBAECD,MAAM,CAACG,MAFR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAIOH,MAAM,CAACG,MAAP,EAJP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAMQD,EAAE,aANV;;AAAA;AAAA,+CASIA,EAAE,CAACD,GAAD,CATN;;AAAA;AAAA;AAAA;AAAA,qBAcUD,MAAM,CAACI,IAAP,EAdV;;AAAA;AAcHA,cAAAA,IAdG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAgBIF,EAAE,aAhBN;;AAAA;AAAA,mBAmBDE,IAAI,CAACC,IAnBJ;AAAA;AAAA;AAAA;;AAAA,+CAmBiBH,EAAE,CAAC,IAAD,CAnBnB;;AAAA;AAmB0B;AAC/BA,cAAAA,EAAE,CAAC,IAAD,EAAOE,IAAI,CAACE,KAAZ,CAAF;;AApBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAsBD;;AAEDP,MAAM,CAACC,MAAP,GAAgBD,MAAhB;;AAEAA,MAAM,CAACQ,SAAP,GAAmBR,MAAM,CAACS,OAAP,GAAiB,UAAAR,MAAM;AAAA,SAAI,UAAAS,IAAI;AAAA,WAAIV,MAAM,CAACC,MAAM,CAACF,UAAU,CAACW,IAAD,CAAX,CAAP,CAAV;AAAA,GAAR;AAAA,CAA1C;;AAEAV,MAAM,CAACW,MAAP,GAAgB,UAAAA,MAAM;AAAA,SAAK;AACzBC,IAAAA,IAAI,EAAEZ,MAAM,CAACY,IAAP,CAAYD,MAAM,CAACC,IAAnB,CADmB;AAEzBX,IAAAA,MAAM,EAAED,MAAM,CAACW,MAAM,CAACV,MAAR;AAFW,GAAL;AAAA,CAAtB;;AAKAD,MAAM,CAACY,IAAP,GAAc,UAAAA,IAAI,EAAI;AACpB,SAAO,UAAAF,IAAI,EAAI;AAAA;;AACbE,IAAAA,IAAI,qCACDC,MAAM,CAACC,aADN,cACwB;AACxB,aAAO,IAAP;AACD,KAHC,kCAKI;AAAA,aAAM,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3CP,QAAAA,IAAI,CAAC,IAAD,EAAO,UAACR,GAAD,EAAMK,KAAN,EAAgB;AACzB,cAAIL,GAAG,KAAK,IAAZ,EAAkB,OAAOc,OAAO,CAAC;AAAEV,YAAAA,IAAI,EAAE,IAAR;AAAcC,YAAAA,KAAK,EAALA;AAAd,WAAD,CAAd;AAClB,cAAIL,GAAJ,EAAS,OAAOe,MAAM,CAACf,GAAD,CAAb;AACTc,UAAAA,OAAO,CAAC;AAAEV,YAAAA,IAAI,EAAE,KAAR;AAAeC,YAAAA,KAAK,EAALA;AAAf,WAAD,CAAP;AACD,SAJG,CAAJ;AAKD,OANW,CAAN;AAAA,KALJ,oCAaM;AAAA,aAAM,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CP,QAAAA,IAAI,CAAC,IAAD,EAAO,UAACR,GAAD,EAAMK,KAAN,EAAgB;AACzB,cAAIL,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB,OAAOe,MAAM,CAACf,GAAD,CAAb;AACzBc,UAAAA,OAAO,CAAC;AAAEV,YAAAA,IAAI,EAAE,IAAR;AAAcC,YAAAA,KAAK,EAALA;AAAd,WAAD,CAAP;AACD,SAHG,CAAJ;AAID,OALa,CAAN;AAAA,KAbN,mCAoBK,gBAAAW,GAAG;AAAA,aAAI,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CP,QAAAA,IAAI,CAACQ,GAAD,EAAM,UAAChB,GAAD,EAAMK,KAAN,EAAgB;AACxB,cAAIL,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB,OAAOe,MAAM,CAACf,GAAD,CAAb;AACzBc,UAAAA,OAAO,CAAC;AAAEV,YAAAA,IAAI,EAAE,IAAR;AAAcC,YAAAA,KAAK,EAALA;AAAd,WAAD,CAAP;AACD,SAHG,CAAJ;AAID,OALa,CAAJ;AAAA,KApBR,UAAJ;AA2BD,GA5BD;AA6BD,CA9BD;;AAgCAY,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["const getIterator = require('get-iterator')\nconst toIterable = require('pull-stream-to-async-iterator')\n\nfunction toPull (source) {\n  source = getIterator(source)\n\n  return async (end, cb) => {\n    if (end) {\n      if (source.return) {\n        try {\n          await source.return()\n        } catch (err) {\n          return cb(err)\n        }\n      }\n      return cb(end)\n    }\n\n    let next\n    try {\n      next = await source.next()\n    } catch (err) {\n      return cb(err)\n    }\n\n    if (next.done) return cb(true) // eslint-disable-line\n    cb(null, next.value)\n  }\n}\n\ntoPull.source = toPull\n\ntoPull.transform = toPull.through = source => read => toPull(source(toIterable(read)))\n\ntoPull.duplex = duplex => ({\n  sink: toPull.sink(duplex.sink),\n  source: toPull(duplex.source)\n})\n\ntoPull.sink = sink => {\n  return read => {\n    sink({\n      [Symbol.asyncIterator] () {\n        return this\n      },\n\n      next: () => new Promise((resolve, reject) => {\n        read(null, (end, value) => {\n          if (end === true) return resolve({ done: true, value })\n          if (end) return reject(end)\n          resolve({ done: false, value })\n        })\n      }),\n\n      return: () => new Promise((resolve, reject) => {\n        read(true, (end, value) => {\n          if (end && end !== true) return reject(end)\n          resolve({ done: true, value })\n        })\n      }),\n\n      throw: err => new Promise((resolve, reject) => {\n        read(err, (end, value) => {\n          if (end && end !== true) return reject(end)\n          resolve({ done: true, value })\n        })\n      })\n    })\n  }\n}\n\nmodule.exports = toPull\n"]},"metadata":{},"sourceType":"script"}