{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar assert = require('assert');\n\nvar CID = require('cids');\n\nvar WantListEntry = /*#__PURE__*/function () {\n  function WantListEntry(cid, priority) {\n    _classCallCheck(this, WantListEntry);\n\n    assert(CID.isCID(cid), 'must be valid CID'); // Keep track of how many requests we have for this key\n\n    this._refCounter = 1;\n    this.cid = cid;\n    this.priority = priority || 1;\n  }\n\n  _createClass(WantListEntry, [{\n    key: \"inc\",\n    value: function inc() {\n      this._refCounter += 1;\n    }\n  }, {\n    key: \"dec\",\n    value: function dec() {\n      this._refCounter = Math.max(0, this._refCounter - 1);\n    }\n  }, {\n    key: \"hasRefs\",\n    value: function hasRefs() {\n      return this._refCounter > 0;\n    } // So that console.log prints a nice description of this object\n\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      var cidStr = this.cid.toBaseEncodedString();\n      return \"WantlistEntry <key: \".concat(cidStr, \", priority: \").concat(this.priority, \", refs: \").concat(this._refCounter, \">\");\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this._refCounter === other._refCounter && this.cid.equals(other.cid) && this.priority === other.priority;\n    }\n  }]);\n\n  return WantListEntry;\n}();\n\nmodule.exports = WantListEntry;","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/ipfs-bitswap/src/types/wantlist/entry.js"],"names":["assert","require","CID","WantListEntry","cid","priority","isCID","_refCounter","Math","max","Symbol","toStringTag","cidStr","toBaseEncodedString","other","equals","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;IAEME,a;AACJ,yBAAaC,GAAb,EAAkBC,QAAlB,EAA4B;AAAA;;AAC1BL,IAAAA,MAAM,CAACE,GAAG,CAACI,KAAJ,CAAUF,GAAV,CAAD,EAAiB,mBAAjB,CAAN,CAD0B,CAG1B;;AACA,SAAKG,WAAL,GAAmB,CAAnB;AAEA,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKC,QAAL,GAAgBA,QAAQ,IAAI,CAA5B;AACD;;;;WAED,eAAO;AACL,WAAKE,WAAL,IAAoB,CAApB;AACD;;;WAED,eAAO;AACL,WAAKA,WAAL,GAAmBC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKF,WAAL,GAAmB,CAA/B,CAAnB;AACD;;;WAED,mBAAW;AACT,aAAO,KAAKA,WAAL,GAAmB,CAA1B;AACD,K,CAED;;;SACKG,MAAM,CAACC,W;SAAZ,eAA4B;AAC1B,UAAMC,MAAM,GAAG,KAAKR,GAAL,CAASS,mBAAT,EAAf;AACA,2CAA8BD,MAA9B,yBAAmD,KAAKP,QAAxD,qBAA2E,KAAKE,WAAhF;AACD;;;WAED,gBAAQO,KAAR,EAAe;AACb,aAAQ,KAAKP,WAAL,KAAqBO,KAAK,CAACP,WAA5B,IACL,KAAKH,GAAL,CAASW,MAAT,CAAgBD,KAAK,CAACV,GAAtB,CADK,IAEL,KAAKC,QAAL,KAAkBS,KAAK,CAACT,QAF1B;AAGD;;;;;;AAGHW,MAAM,CAACC,OAAP,GAAiBd,aAAjB","sourcesContent":["'use strict'\n\nconst assert = require('assert')\nconst CID = require('cids')\n\nclass WantListEntry {\n  constructor (cid, priority) {\n    assert(CID.isCID(cid), 'must be valid CID')\n\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1\n\n    this.cid = cid\n    this.priority = priority || 1\n  }\n\n  inc () {\n    this._refCounter += 1\n  }\n\n  dec () {\n    this._refCounter = Math.max(0, this._refCounter - 1)\n  }\n\n  hasRefs () {\n    return this._refCounter > 0\n  }\n\n  // So that console.log prints a nice description of this object\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toBaseEncodedString()\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`\n  }\n\n  equals (other) {\n    return (this._refCounter === other._refCounter) &&\n      this.cid.equals(other.cid) &&\n      this.priority === other.priority\n  }\n}\n\nmodule.exports = WantListEntry\n"]},"metadata":{},"sourceType":"script"}