{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar hasBigInt64 = typeof BigUint64Array !== \"undefined\";\nvar thisPtr = Symbol();\n/** Gets a string from an U32 and an U16 view on a memory. */\n\nfunction getStringImpl(U32, U16, ptr) {\n  var dataLength = U32[ptr >>> 2];\n  var dataOffset = ptr + 4 >>> 1;\n  var dataRemain = dataLength;\n  var parts = [];\n  var chunkSize = 1024;\n\n  while (dataRemain > chunkSize) {\n    var last = U16[dataOffset + chunkSize - 1];\n    var size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\n    var part = U16.subarray(dataOffset, dataOffset += size);\n    parts.push(String.fromCharCode.apply(String, part));\n    dataRemain -= size;\n  }\n\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\n}\n/** Prepares the base module prior to instantiation. */\n\n\nfunction preInstantiate(imports) {\n  var baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    var buffer = memory.buffer;\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\n  } // add common imports used by stdlib for convenience\n\n\n  var env = imports.env = imports.env || {};\n\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  };\n\n  env.trace = env.trace || function trace(mesg, n) {\n    var memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  };\n\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n  return baseModule;\n}\n/** Prepares the final module once instantiation is complete. */\n\n\nfunction postInstantiate(baseModule, instance) {\n  var rawExports = instance.exports;\n  var memory = rawExports.memory;\n  var memory_allocate = rawExports[\"memory.allocate\"];\n  var memory_fill = rawExports[\"memory.fill\"];\n  var memory_free = rawExports[\"memory.free\"];\n  var table = rawExports.table;\n\n  var setargc = rawExports._setargc || function () {}; // Provide views for all sorts of basic values\n\n\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\n  /** Updates memory views if memory has grown meanwhile. */\n\n  function checkMem() {\n    // see: https://github.com/WebAssembly/design/issues/1210\n    if (buffer !== memory.buffer) {\n      buffer = memory.buffer;\n      I8 = new Int8Array(buffer);\n      U8 = new Uint8Array(buffer);\n      I16 = new Int16Array(buffer);\n      U16 = new Uint16Array(buffer);\n      I32 = new Int32Array(buffer);\n      U32 = new Uint32Array(buffer);\n\n      if (hasBigInt64) {\n        I64 = new BigInt64Array(buffer);\n        U64 = new BigUint64Array(buffer);\n      }\n\n      F32 = new Float32Array(buffer);\n      F64 = new Float64Array(buffer);\n    }\n  }\n\n  checkMem();\n  /** Allocates a new string in the module's memory and returns its pointer. */\n\n  function newString(str) {\n    var dataLength = str.length;\n    var ptr = memory_allocate(4 + (dataLength << 1));\n    var dataOffset = 4 + ptr >>> 1;\n    checkMem();\n    U32[ptr >>> 2] = dataLength;\n\n    for (var i = 0; i < dataLength; ++i) {\n      U16[dataOffset + i] = str.charCodeAt(i);\n    }\n\n    return ptr;\n  }\n\n  baseModule.newString = newString;\n  /** Gets a string from the module's memory by its pointer. */\n\n  function getString(ptr) {\n    checkMem();\n    return getStringImpl(U32, U16, ptr);\n  }\n\n  baseModule.getString = getString;\n\n  function computeBufferSize(byteLength) {\n    var HEADER_SIZE = 8;\n    return 1 << 32 - Math.clz32(byteLength + HEADER_SIZE - 1);\n  }\n  /** Creates a new typed array in the module's memory and returns its pointer. */\n\n\n  function newArray(view, length, unsafe) {\n    var ctor = view.constructor;\n\n    if (ctor === Function) {\n      // TypedArray constructor created in memory\n      ctor = view;\n      view = null;\n    } else {\n      // TypedArray instance copied into memory\n      if (length === undefined) length = view.length;\n    }\n\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    var byteLength = elementSize * length;\n    var ptr = memory_allocate(12); // TypedArray header\n\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\n\n    checkMem();\n    U32[ptr >>> 2] = buf; // .buffer\n\n    U32[ptr + 4 >>> 2] = 0; // .byteOffset\n\n    U32[ptr + 8 >>> 2] = byteLength; // .byteLength\n\n    U32[buf >>> 2] = byteLength; // .byteLength\n\n    U32[buf + 4 >>> 2] = 0; // 0\n\n    if (view) {\n      new ctor(buffer, buf + 8, length).set(view);\n\n      if (view.length < length && !unsafe) {\n        var setLength = elementSize * view.length;\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\n      }\n    } else if (!unsafe) {\n      memory_fill(buf + 8, 0, byteLength);\n    }\n\n    return ptr;\n  }\n\n  baseModule.newArray = newArray;\n  /** Gets a view on a typed array in the module's memory by its pointer. */\n\n  function getArray(ctor, ptr) {\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    checkMem();\n    var buf = U32[ptr >>> 2];\n    var byteOffset = U32[ptr + 4 >>> 2];\n    var byteLength = U32[ptr + 8 >>> 2];\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\n  }\n\n  baseModule.getArray = getArray;\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\n\n  function freeArray(ptr) {\n    checkMem();\n    var buf = U32[ptr >>> 2];\n    memory_free(buf);\n    memory_free(ptr);\n  }\n\n  baseModule.freeArray = freeArray;\n  /**\r\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\r\n   * WebAssembly functions, i.e. as exported by the module, are supported.\r\n   */\n\n  function newFunction(fn) {\n    if (typeof fn.original === \"function\") fn = fn.original;\n    var index = table.length;\n    table.grow(1);\n    table.set(index, fn);\n    return index;\n  }\n\n  baseModule.newFunction = newFunction;\n  /** Gets a function by its pointer. */\n\n  function getFunction(ptr) {\n    return wrapFunction(table.get(ptr), setargc);\n  }\n\n  baseModule.getFunction = getFunction; // Pull basic exports to baseModule so code in preInstantiate can use them\n\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table; // Demangle exports and provide the usual utility on the prototype\n\n  return demangle(rawExports, Object.defineProperties(baseModule, {\n    I8: {\n      get: function get() {\n        checkMem();\n        return I8;\n      }\n    },\n    U8: {\n      get: function get() {\n        checkMem();\n        return U8;\n      }\n    },\n    I16: {\n      get: function get() {\n        checkMem();\n        return I16;\n      }\n    },\n    U16: {\n      get: function get() {\n        checkMem();\n        return U16;\n      }\n    },\n    I32: {\n      get: function get() {\n        checkMem();\n        return I32;\n      }\n    },\n    U32: {\n      get: function get() {\n        checkMem();\n        return U32;\n      }\n    },\n    I64: {\n      get: function get() {\n        checkMem();\n        return I64;\n      }\n    },\n    U64: {\n      get: function get() {\n        checkMem();\n        return U64;\n      }\n    },\n    F32: {\n      get: function get() {\n        checkMem();\n        return F32;\n      }\n    },\n    F64: {\n      get: function get() {\n        checkMem();\n        return F64;\n      }\n    }\n  }));\n}\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\n\n\nfunction wrapFunction(fn, setargc) {\n  var wrap = function wrap() {\n    setargc(arguments.length);\n    return fn.apply(void 0, arguments);\n  }; // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\n  // hence we can't use the wrapper and instead need to provide a reference to the original\n\n\n  wrap.original = fn;\n  return wrap;\n}\n/** Instantiates an AssemblyScript module using the specified imports. */\n\n\nfunction instantiate(module, imports) {\n  return postInstantiate(preInstantiate(imports || (imports = {})), new WebAssembly.Instance(module, imports));\n}\n\nexports.instantiate = instantiate;\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\n\nfunction instantiateBuffer(buffer, imports) {\n  return instantiate(new WebAssembly.Module(buffer), imports);\n}\n\nexports.instantiateBuffer = instantiateBuffer;\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\n\nfunction instantiateStreaming(_x, _x2) {\n  return _instantiateStreaming.apply(this, arguments);\n}\n\nfunction _instantiateStreaming() {\n  _instantiateStreaming = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response, imports) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = postInstantiate;\n            _context.t1 = preInstantiate(imports || (imports = {}));\n            _context.next = 4;\n            return WebAssembly.instantiateStreaming(response, imports);\n\n          case 4:\n            _context.t2 = _context.sent.instance;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1, _context.t2));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _instantiateStreaming.apply(this, arguments);\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\n\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n\n  var setargc = exports._setargc || function () {};\n\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n\n  var _loop = function _loop(internalName) {\n    if (!hasOwnProperty(exports, internalName)) return \"continue\";\n    var elem = exports[internalName];\n    var parts = internalName.split(\".\");\n    var curr = module;\n\n    while (parts.length > 1) {\n      var part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n\n    var name = parts[0];\n    var hash = name.indexOf(\"#\");\n\n    if (hash >= 0) {\n      var className = name.substring(0, hash);\n      var classElem = curr[className];\n\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        var ctor = function ctor() {\n          var _ctor$prototype;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return ctor.wrap((_ctor$prototype = ctor.prototype).constructor.apply(_ctor$prototype, [0].concat(args)));\n        };\n\n        ctor.prototype = {};\n\n        ctor.wrap = function (thisValue) {\n          return Object.create(ctor.prototype, _defineProperty({}, thisPtr, {\n            value: thisValue,\n            writable: false\n          }));\n        };\n\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(function (name) {\n          return Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name));\n        });\n        curr[className] = ctor;\n      }\n\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          var getter = exports[internalName.replace(\"set:\", \"get:\")];\n          var setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function get() {\n              return getter(this[thisPtr]);\n            },\n            set: function set(value) {\n              setter(this[thisPtr], value);\n            },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else {\n          // for methods\n          Object.defineProperty(curr, name, {\n            value: function value() {\n              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n\n              setargc(args.length);\n              return elem.apply(void 0, [this[thisPtr]].concat(args));\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  };\n\n  for (var internalName in exports) {\n    var _ret = _loop(internalName);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/assemblyscript/lib/loader/index.js"],"names":["hasBigInt64","BigUint64Array","thisPtr","Symbol","getStringImpl","U32","U16","ptr","dataLength","dataOffset","dataRemain","parts","chunkSize","last","size","part","subarray","push","String","fromCharCode","apply","join","preInstantiate","imports","baseModule","getString","memory","buffer","Uint32Array","Uint16Array","env","abort","mesg","file","line","colm","Error","trace","n","console","log","Array","prototype","slice","call","arguments","Math","Date","postInstantiate","instance","rawExports","exports","memory_allocate","memory_fill","memory_free","table","setargc","_setargc","I8","U8","I16","I32","F32","F64","I64","U64","checkMem","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","Float32Array","Float64Array","newString","str","length","i","charCodeAt","computeBufferSize","byteLength","HEADER_SIZE","clz32","newArray","view","unsafe","ctor","constructor","Function","undefined","elementSize","BYTES_PER_ELEMENT","buf","set","setLength","getArray","byteOffset","freeArray","newFunction","fn","original","index","grow","getFunction","wrapFunction","get","demangle","Object","defineProperties","wrap","instantiate","module","WebAssembly","Instance","instantiateBuffer","Module","instantiateStreaming","response","create","hasOwnProperty","elem","prop","internalName","split","curr","shift","name","hash","indexOf","className","substring","classElem","args","thisValue","value","writable","getOwnPropertyNames","forEach","defineProperty","getOwnPropertyDescriptor","test","getter","replace","setter","enumerable"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst hasBigInt64 = typeof BigUint64Array !== \"undefined\";\r\nconst thisPtr = Symbol();\r\n\r\n/** Gets a string from an U32 and an U16 view on a memory. */\r\nfunction getStringImpl(U32, U16, ptr) {\r\n  var dataLength = U32[ptr >>> 2];\r\n  var dataOffset = (ptr + 4) >>> 1;\r\n  var dataRemain = dataLength;\r\n  var parts = [];\r\n  const chunkSize = 1024;\r\n  while (dataRemain > chunkSize) {\r\n    let last = U16[dataOffset + chunkSize - 1];\r\n    let size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\r\n    let part = U16.subarray(dataOffset, dataOffset += size);\r\n    parts.push(String.fromCharCode.apply(String, part));\r\n    dataRemain -= size;\r\n  }\r\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\r\n}\r\n\r\n/** Prepares the base module prior to instantiation. */\r\nfunction preInstantiate(imports) {\r\n  var baseModule = {};\r\n\r\n  function getString(memory, ptr) {\r\n    if (!memory) return \"<yet unknown>\";\r\n    var buffer = memory.buffer;\r\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\r\n  }\r\n\r\n  // add common imports used by stdlib for convenience\r\n  var env = (imports.env = imports.env || {});\r\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\r\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\r\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\r\n  }\r\n  env.trace = env.trace || function trace(mesg, n) {\r\n    var memory = baseModule.memory || env.memory;\r\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\r\n  }\r\n  imports.Math = imports.Math || Math;\r\n  imports.Date = imports.Date || Date;\r\n\r\n  return baseModule;\r\n}\r\n\r\n/** Prepares the final module once instantiation is complete. */\r\nfunction postInstantiate(baseModule, instance) {\r\n  var rawExports = instance.exports;\r\n  var memory = rawExports.memory;\r\n  var memory_allocate = rawExports[\"memory.allocate\"];\r\n  var memory_fill = rawExports[\"memory.fill\"];\r\n  var memory_free = rawExports[\"memory.free\"];\r\n  var table = rawExports.table;\r\n  var setargc = rawExports._setargc || function() {};\r\n\r\n  // Provide views for all sorts of basic values\r\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\r\n\r\n  /** Updates memory views if memory has grown meanwhile. */\r\n  function checkMem() {\r\n    // see: https://github.com/WebAssembly/design/issues/1210\r\n    if (buffer !== memory.buffer) {\r\n      buffer = memory.buffer;\r\n      I8  = new Int8Array(buffer);\r\n      U8  = new Uint8Array(buffer);\r\n      I16 = new Int16Array(buffer);\r\n      U16 = new Uint16Array(buffer);\r\n      I32 = new Int32Array(buffer);\r\n      U32 = new Uint32Array(buffer);\r\n      if (hasBigInt64) {\r\n        I64 = new BigInt64Array(buffer);\r\n        U64 = new BigUint64Array(buffer);\r\n      }\r\n      F32 = new Float32Array(buffer);\r\n      F64 = new Float64Array(buffer);\r\n    }\r\n  }\r\n  checkMem();\r\n\r\n  /** Allocates a new string in the module's memory and returns its pointer. */\r\n  function newString(str) {\r\n    var dataLength = str.length;\r\n    var ptr = memory_allocate(4 + (dataLength << 1));\r\n    var dataOffset = (4 + ptr) >>> 1;\r\n    checkMem();\r\n    U32[ptr >>> 2] = dataLength;\r\n    for (let i = 0; i < dataLength; ++i) U16[dataOffset + i] = str.charCodeAt(i);\r\n    return ptr;\r\n  }\r\n\r\n  baseModule.newString = newString;\r\n\r\n  /** Gets a string from the module's memory by its pointer. */\r\n  function getString(ptr) {\r\n    checkMem();\r\n    return getStringImpl(U32, U16, ptr);\r\n  }\r\n\r\n  baseModule.getString = getString;\r\n\r\n  function computeBufferSize(byteLength) {\r\n    const HEADER_SIZE = 8;\r\n    return 1 << (32 - Math.clz32(byteLength + HEADER_SIZE - 1));\r\n  }\r\n\r\n  /** Creates a new typed array in the module's memory and returns its pointer. */\r\n  function newArray(view, length, unsafe) {\r\n    var ctor = view.constructor;\r\n    if (ctor === Function) { // TypedArray constructor created in memory\r\n      ctor = view;\r\n      view = null;\r\n    } else { // TypedArray instance copied into memory\r\n      if (length === undefined) length = view.length;\r\n    }\r\n    var elementSize = ctor.BYTES_PER_ELEMENT;\r\n    if (!elementSize) throw Error(\"not a typed array\");\r\n    var byteLength = elementSize * length;\r\n    var ptr = memory_allocate(12); // TypedArray header\r\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\r\n    checkMem();\r\n    U32[ ptr      >>> 2] = buf;        // .buffer\r\n    U32[(ptr + 4) >>> 2] = 0;          // .byteOffset\r\n    U32[(ptr + 8) >>> 2] = byteLength; // .byteLength\r\n    U32[ buf      >>> 2] = byteLength; // .byteLength\r\n    U32[(buf + 4) >>> 2] = 0;          // 0\r\n    if (view) {\r\n      new ctor(buffer, buf + 8, length).set(view);\r\n      if (view.length < length && !unsafe) {\r\n        let setLength = elementSize * view.length;\r\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\r\n      }\r\n    } else if (!unsafe) {\r\n      memory_fill(buf + 8, 0, byteLength);\r\n    }\r\n    return ptr;\r\n  }\r\n\r\n  baseModule.newArray = newArray;\r\n\r\n  /** Gets a view on a typed array in the module's memory by its pointer. */\r\n  function getArray(ctor, ptr) {\r\n    var elementSize = ctor.BYTES_PER_ELEMENT;\r\n    if (!elementSize) throw Error(\"not a typed array\");\r\n    checkMem();\r\n    var buf        = U32[ ptr      >>> 2];\r\n    var byteOffset = U32[(ptr + 4) >>> 2];\r\n    var byteLength = U32[(ptr + 8) >>> 2];\r\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\r\n  }\r\n\r\n  baseModule.getArray = getArray;\r\n\r\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\r\n  function freeArray(ptr) {\r\n    checkMem();\r\n    var buf = U32[ptr >>> 2];\r\n    memory_free(buf);\r\n    memory_free(ptr);\r\n  }\r\n\r\n  baseModule.freeArray = freeArray;\r\n\r\n  /**\r\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\r\n   * WebAssembly functions, i.e. as exported by the module, are supported.\r\n   */\r\n  function newFunction(fn) {\r\n    if (typeof fn.original === \"function\") fn = fn.original;\r\n    var index = table.length;\r\n    table.grow(1);\r\n    table.set(index, fn);\r\n    return index;\r\n  }\r\n\r\n  baseModule.newFunction = newFunction;\r\n\r\n  /** Gets a function by its pointer. */\r\n  function getFunction(ptr) {\r\n    return wrapFunction(table.get(ptr), setargc);\r\n  }\r\n\r\n  baseModule.getFunction = getFunction;\r\n\r\n  // Pull basic exports to baseModule so code in preInstantiate can use them\r\n  baseModule.memory = baseModule.memory || memory;\r\n  baseModule.table = baseModule.table || table;\r\n\r\n  // Demangle exports and provide the usual utility on the prototype\r\n  return demangle(rawExports, Object.defineProperties(baseModule, {\r\n    I8: { get: function() { checkMem(); return I8; } },\r\n    U8: { get: function() { checkMem(); return U8; } },\r\n    I16: { get: function() { checkMem(); return I16; } },\r\n    U16: { get: function() { checkMem(); return U16; } },\r\n    I32: { get: function() { checkMem(); return I32; } },\r\n    U32: { get: function() { checkMem(); return U32; } },\r\n    I64: { get: function() { checkMem(); return I64; } },\r\n    U64: { get: function() { checkMem(); return U64; } },\r\n    F32: { get: function() { checkMem(); return F32; } },\r\n    F64: { get: function() { checkMem(); return F64; } }\r\n  }));\r\n}\r\n\r\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\r\nfunction wrapFunction(fn, setargc) {\r\n  var wrap = (...args) => {\r\n    setargc(args.length);\r\n    return fn(...args);\r\n  }\r\n  // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\r\n  // hence we can't use the wrapper and instead need to provide a reference to the original\r\n  wrap.original = fn;\r\n  return wrap;\r\n}\r\n\r\n/** Instantiates an AssemblyScript module using the specified imports. */\r\nfunction instantiate(module, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    new WebAssembly.Instance(module, imports)\r\n  );\r\n}\r\n\r\nexports.instantiate = instantiate;\r\n\r\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\r\nfunction instantiateBuffer(buffer, imports) {\r\n  return instantiate(new WebAssembly.Module(buffer), imports);\r\n}\r\n\r\nexports.instantiateBuffer = instantiateBuffer;\r\n\r\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\r\nasync function instantiateStreaming(response, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\r\n  );\r\n}\r\n\r\nexports.instantiateStreaming = instantiateStreaming;\r\n\r\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\r\nfunction demangle(exports, baseModule) {\r\n  var module = baseModule ? Object.create(baseModule) : {};\r\n  var setargc = exports._setargc || function() {};\r\n  function hasOwnProperty(elem, prop) {\r\n    return Object.prototype.hasOwnProperty.call(elem, prop);\r\n  }\r\n  for (let internalName in exports) {\r\n    if (!hasOwnProperty(exports, internalName)) continue;\r\n    let elem = exports[internalName];\r\n    let parts = internalName.split(\".\");\r\n    let curr = module;\r\n    while (parts.length > 1) {\r\n      let part = parts.shift();\r\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\r\n      curr = curr[part];\r\n    }\r\n    let name = parts[0];\r\n    let hash = name.indexOf(\"#\");\r\n    if (hash >= 0) {\r\n      let className = name.substring(0, hash);\r\n      let classElem = curr[className];\r\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\r\n        let ctor = function(...args) {\r\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\r\n        };\r\n        ctor.prototype = {};\r\n        ctor.wrap = function(thisValue) {\r\n          return Object.create(ctor.prototype, { [thisPtr]: { value: thisValue, writable: false } });\r\n        };\r\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\r\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\r\n        );\r\n        curr[className] = ctor;\r\n      }\r\n      name = name.substring(hash + 1);\r\n      curr = curr[className].prototype;\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\r\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\r\n          Object.defineProperty(curr, name, {\r\n            get: function() { return getter(this[thisPtr]); },\r\n            set: function(value) { setter(this[thisPtr], value); },\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else {\r\n        if (name === 'constructor') {\r\n          curr[name] = wrapFunction(elem, setargc);\r\n        } else { // for methods\r\n          Object.defineProperty(curr, name, {\r\n            value: function (...args) {\r\n              setargc(args.length);\r\n              return elem(this[thisPtr], ...args);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          Object.defineProperty(curr, name, {\r\n            get: exports[internalName.replace(\"set:\", \"get:\")],\r\n            set: exports[internalName.replace(\"get:\", \"set:\")],\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else if (typeof elem === \"function\") {\r\n        curr[name] = wrapFunction(elem, setargc);\r\n      } else {\r\n        curr[name] = elem;\r\n      }\r\n    }\r\n  }\r\n\r\n  return module;\r\n}\r\n\r\nexports.demangle = demangle;\r\n"]},"metadata":{},"sourceType":"script"}