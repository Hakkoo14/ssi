{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar PeerList = require('./peer-list');\n/**\n * Like PeerList but with a length restriction.\n */\n\n\nvar LimitedPeerList = /*#__PURE__*/function (_PeerList) {\n  _inherits(LimitedPeerList, _PeerList);\n\n  var _super = _createSuper(LimitedPeerList);\n\n  /**\n   * Create a new limited peer list.\n   *\n   * @param {number} limit\n   */\n  function LimitedPeerList(limit) {\n    var _this;\n\n    _classCallCheck(this, LimitedPeerList);\n\n    _this = _super.call(this);\n    _this.limit = limit;\n    return _this;\n  }\n  /**\n   * Add a PeerInfo if it fits in the list\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n\n\n  _createClass(LimitedPeerList, [{\n    key: \"push\",\n    value: function push(info) {\n      if (this.length < this.limit) {\n        return _get(_getPrototypeOf(LimitedPeerList.prototype), \"push\", this).call(this, info);\n      }\n\n      return false;\n    }\n  }]);\n\n  return LimitedPeerList;\n}(PeerList);\n\nmodule.exports = LimitedPeerList;","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/libp2p-kad-dht/src/limited-peer-list.js"],"names":["PeerList","require","LimitedPeerList","limit","info","length","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;AAEA;AACA;AACA;;;IACMC,e;;;;;AACJ;AACF;AACA;AACA;AACA;AACE,2BAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB;AACA,UAAKA,KAAL,GAAaA,KAAb;AAFkB;AAGnB;AAED;AACF;AACA;AACA;AACA;AACA;;;;;WACE,cAAMC,IAAN,EAAY;AACV,UAAI,KAAKC,MAAL,GAAc,KAAKF,KAAvB,EAA8B;AAC5B,yFAAkBC,IAAlB;AACD;;AACD,aAAO,KAAP;AACD;;;;EAtB2BJ,Q;;AAyB9BM,MAAM,CAACC,OAAP,GAAiBL,eAAjB","sourcesContent":["'use strict'\n\nconst PeerList = require('./peer-list')\n\n/**\n * Like PeerList but with a length restriction.\n */\nclass LimitedPeerList extends PeerList {\n  /**\n   * Create a new limited peer list.\n   *\n   * @param {number} limit\n   */\n  constructor (limit) {\n    super()\n    this.limit = limit\n  }\n\n  /**\n   * Add a PeerInfo if it fits in the list\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n  push (info) {\n    if (this.length < this.limit) {\n      return super.push(info)\n    }\n    return false\n  }\n}\n\nmodule.exports = LimitedPeerList\n"]},"metadata":{},"sourceType":"script"}