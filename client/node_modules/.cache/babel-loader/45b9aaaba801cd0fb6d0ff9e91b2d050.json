{"ast":null,"code":"'use strict'; // See https://github.com/ipfs/specs/tree/master/keystore\n\nvar promisify = require('promisify-es6');\n\nmodule.exports = function key(self) {\n  return {\n    gen: promisify(function (name, opts, callback) {\n      opts = opts || {};\n\n      self._keychain.createKey(name, opts.type, opts.size, callback);\n    }),\n    info: promisify(function (name, callback) {\n      self._keychain.findKeyByName(name, callback);\n    }),\n    list: promisify(function (callback) {\n      self._keychain.listKeys(callback);\n    }),\n    rm: promisify(function (name, callback) {\n      self._keychain.removeKey(name, callback);\n    }),\n    rename: promisify(function (oldName, newName, callback) {\n      self._keychain.renameKey(oldName, newName, function (err, key) {\n        if (err) return callback(err);\n        var result = {\n          was: oldName,\n          now: key.name,\n          id: key.id,\n          overwrite: false\n        };\n        callback(null, result);\n      });\n    }),\n    import: promisify(function (name, pem, password, callback) {\n      self._keychain.importKey(name, pem, password, callback);\n    }),\n    export: promisify(function (name, password, callback) {\n      self._keychain.exportKey(name, password, callback);\n    })\n  };\n};","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/ipfs/src/core/components/key.js"],"names":["promisify","require","module","exports","key","self","gen","name","opts","callback","_keychain","createKey","type","size","info","findKeyByName","list","listKeys","rm","removeKey","rename","oldName","newName","renameKey","err","result","was","now","id","overwrite","import","pem","password","importKey","export","exportKey"],"mappings":"AAAA,a,CAEA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAcC,IAAd,EAAoB;AACnC,SAAO;AACLC,IAAAA,GAAG,EAAEN,SAAS,CAAC,UAACO,IAAD,EAAOC,IAAP,EAAaC,QAAb,EAA0B;AACvCD,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AACAH,MAAAA,IAAI,CAACK,SAAL,CAAeC,SAAf,CAAyBJ,IAAzB,EAA+BC,IAAI,CAACI,IAApC,EAA0CJ,IAAI,CAACK,IAA/C,EAAqDJ,QAArD;AACD,KAHa,CADT;AAMLK,IAAAA,IAAI,EAAEd,SAAS,CAAC,UAACO,IAAD,EAAOE,QAAP,EAAoB;AAClCJ,MAAAA,IAAI,CAACK,SAAL,CAAeK,aAAf,CAA6BR,IAA7B,EAAmCE,QAAnC;AACD,KAFc,CANV;AAULO,IAAAA,IAAI,EAAEhB,SAAS,CAAC,UAACS,QAAD,EAAc;AAC5BJ,MAAAA,IAAI,CAACK,SAAL,CAAeO,QAAf,CAAwBR,QAAxB;AACD,KAFc,CAVV;AAcLS,IAAAA,EAAE,EAAElB,SAAS,CAAC,UAACO,IAAD,EAAOE,QAAP,EAAoB;AAChCJ,MAAAA,IAAI,CAACK,SAAL,CAAeS,SAAf,CAAyBZ,IAAzB,EAA+BE,QAA/B;AACD,KAFY,CAdR;AAkBLW,IAAAA,MAAM,EAAEpB,SAAS,CAAC,UAACqB,OAAD,EAAUC,OAAV,EAAmBb,QAAnB,EAAgC;AAChDJ,MAAAA,IAAI,CAACK,SAAL,CAAea,SAAf,CAAyBF,OAAzB,EAAkCC,OAAlC,EAA2C,UAACE,GAAD,EAAMpB,GAAN,EAAc;AACvD,YAAIoB,GAAJ,EAAS,OAAOf,QAAQ,CAACe,GAAD,CAAf;AACT,YAAMC,MAAM,GAAG;AACbC,UAAAA,GAAG,EAAEL,OADQ;AAEbM,UAAAA,GAAG,EAAEvB,GAAG,CAACG,IAFI;AAGbqB,UAAAA,EAAE,EAAExB,GAAG,CAACwB,EAHK;AAIbC,UAAAA,SAAS,EAAE;AAJE,SAAf;AAMApB,QAAAA,QAAQ,CAAC,IAAD,EAAOgB,MAAP,CAAR;AACD,OATD;AAUD,KAXgB,CAlBZ;AA+BLK,IAAAA,MAAM,EAAE9B,SAAS,CAAC,UAACO,IAAD,EAAOwB,GAAP,EAAYC,QAAZ,EAAsBvB,QAAtB,EAAmC;AACnDJ,MAAAA,IAAI,CAACK,SAAL,CAAeuB,SAAf,CAAyB1B,IAAzB,EAA+BwB,GAA/B,EAAoCC,QAApC,EAA8CvB,QAA9C;AACD,KAFgB,CA/BZ;AAmCLyB,IAAAA,MAAM,EAAElC,SAAS,CAAC,UAACO,IAAD,EAAOyB,QAAP,EAAiBvB,QAAjB,EAA8B;AAC9CJ,MAAAA,IAAI,CAACK,SAAL,CAAeyB,SAAf,CAAyB5B,IAAzB,EAA+ByB,QAA/B,EAAyCvB,QAAzC;AACD,KAFgB;AAnCZ,GAAP;AAuCD,CAxCD","sourcesContent":["'use strict'\n\n// See https://github.com/ipfs/specs/tree/master/keystore\n\nconst promisify = require('promisify-es6')\n\nmodule.exports = function key (self) {\n  return {\n    gen: promisify((name, opts, callback) => {\n      opts = opts || {}\n      self._keychain.createKey(name, opts.type, opts.size, callback)\n    }),\n\n    info: promisify((name, callback) => {\n      self._keychain.findKeyByName(name, callback)\n    }),\n\n    list: promisify((callback) => {\n      self._keychain.listKeys(callback)\n    }),\n\n    rm: promisify((name, callback) => {\n      self._keychain.removeKey(name, callback)\n    }),\n\n    rename: promisify((oldName, newName, callback) => {\n      self._keychain.renameKey(oldName, newName, (err, key) => {\n        if (err) return callback(err)\n        const result = {\n          was: oldName,\n          now: key.name,\n          id: key.id,\n          overwrite: false\n        }\n        callback(null, result)\n      })\n    }),\n\n    import: promisify((name, pem, password, callback) => {\n      self._keychain.importKey(name, pem, password, callback)\n    }),\n\n    export: promisify((name, password, callback) => {\n      self._keychain.exportKey(name, password, callback)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}