{"ast":null,"code":"/* global self */\n'use strict';\n\nmodule.exports = function (domain, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  domain = encodeURIComponent(domain);\n  var url = \"https://ipfs.io/api/v0/dns?arg=\".concat(domain);\n  Object.keys(opts).forEach(function (prop) {\n    url += \"&\".concat(encodeURIComponent(prop), \"=\").concat(encodeURIComponent(opts[prop]));\n  });\n  self.fetch(url, {\n    mode: 'cors'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.Path) {\n      return callback(null, response.Path);\n    } else {\n      return callback(new Error(response.Message));\n    }\n  }).catch(function (error) {\n    callback(error);\n  });\n};","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/ipfs/src/core/runtime/dns-browser.js"],"names":["module","exports","domain","opts","callback","encodeURIComponent","url","Object","keys","forEach","prop","self","fetch","mode","then","response","json","Path","Error","Message","catch","error"],"mappings":"AAAA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,EAA4B;AAC3C,MAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,IAAAA,QAAQ,GAAGD,IAAX;AACAA,IAAAA,IAAI,GAAG,EAAP;AACD;;AAEDA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEAD,EAAAA,MAAM,GAAGG,kBAAkB,CAACH,MAAD,CAA3B;AACA,MAAII,GAAG,4CAAqCJ,MAArC,CAAP;AAEAK,EAAAA,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAChCJ,IAAAA,GAAG,eAAQD,kBAAkB,CAACK,IAAD,CAA1B,cAAoCL,kBAAkB,CAACF,IAAI,CAACO,IAAD,CAAL,CAAtD,CAAH;AACD,GAFD;AAIAC,EAAAA,IAAI,CAACC,KAAL,CAAWN,GAAX,EAAgB;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAhB,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHH,EAIGF,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB,QAAIA,QAAQ,CAACE,IAAb,EAAmB;AACjB,aAAOb,QAAQ,CAAC,IAAD,EAAOW,QAAQ,CAACE,IAAhB,CAAf;AACD,KAFD,MAEO;AACL,aAAOb,QAAQ,CAAC,IAAIc,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAAD,CAAf;AACD;AACF,GAVH,EAWGC,KAXH,CAWS,UAACC,KAAD,EAAW;AAChBjB,IAAAA,QAAQ,CAACiB,KAAD,CAAR;AACD,GAbH;AAcD,CA7BD","sourcesContent":["/* global self */\n'use strict'\n\nmodule.exports = (domain, opts, callback) => {\n  if (typeof opts === 'function') {\n    callback = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n\n  domain = encodeURIComponent(domain)\n  let url = `https://ipfs.io/api/v0/dns?arg=${domain}`\n\n  Object.keys(opts).forEach(prop => {\n    url += `&${encodeURIComponent(prop)}=${encodeURIComponent(opts[prop])}`\n  })\n\n  self.fetch(url, { mode: 'cors' })\n    .then((response) => {\n      return response.json()\n    })\n    .then((response) => {\n      if (response.Path) {\n        return callback(null, response.Path)\n      } else {\n        return callback(new Error(response.Message))\n      }\n    })\n    .catch((error) => {\n      callback(error)\n    })\n}\n"]},"metadata":{},"sourceType":"script"}