{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _require = require('./index'),\n    Message = _require.Message;\n\nvar SignPrefix = Buffer.from('libp2p-pubsub:');\nmodule.exports.SignPrefix = SignPrefix;\n/**\n * Signs the provided message with the given `peerId`\n *\n * @param {PeerId} peerId\n * @param {Message} message\n * @param {function(Error, Message)} callback\n * @returns {void}\n */\n\nmodule.exports.signMessage = function (peerId, message, callback) {\n  // Get the message in bytes, and prepend with the pubsub prefix\n  var bytes = Buffer.concat([SignPrefix, Message.encode(message)]); // Sign the bytes with the private key\n\n  peerId.privKey.sign(bytes, function (err, signature) {\n    if (err) return callback(err);\n    callback(null, _objectSpread(_objectSpread({}, message), {}, {\n      signature: signature,\n      key: peerId.pubKey.bytes\n    }));\n  });\n};","map":{"version":3,"sources":["C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/libp2p-pubsub/src/message/sign.js"],"names":["require","Message","SignPrefix","Buffer","from","module","exports","signMessage","peerId","message","callback","bytes","concat","encode","privKey","sign","err","signature","key","pubKey"],"mappings":"AAAA;;;;AAEA,eAAoBA,OAAO,CAAC,SAAD,CAA3B;AAAA,IAAQC,OAAR,YAAQA,OAAR;;AACA,IAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAY,gBAAZ,CAAnB;AAEAC,MAAM,CAACC,OAAP,CAAeJ,UAAf,GAA4BA,UAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAG,MAAM,CAACC,OAAP,CAAeC,WAAf,GAA6B,UAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,QAA3B,EAAqC;AAChE;AACA,MAAMC,KAAK,GAAGR,MAAM,CAACS,MAAP,CAAc,CAC1BV,UAD0B,EAE1BD,OAAO,CAACY,MAAR,CAAeJ,OAAf,CAF0B,CAAd,CAAd,CAFgE,CAOhE;;AACAD,EAAAA,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoBJ,KAApB,EAA2B,UAACK,GAAD,EAAMC,SAAN,EAAoB;AAC7C,QAAID,GAAJ,EAAS,OAAON,QAAQ,CAACM,GAAD,CAAf;AAETN,IAAAA,QAAQ,CAAC,IAAD,kCACHD,OADG;AAENQ,MAAAA,SAAS,EAAEA,SAFL;AAGNC,MAAAA,GAAG,EAAEV,MAAM,CAACW,MAAP,CAAcR;AAHb,OAAR;AAKD,GARD;AASD,CAjBD","sourcesContent":["'use strict'\n\nconst { Message } = require('./index')\nconst SignPrefix = Buffer.from('libp2p-pubsub:')\n\nmodule.exports.SignPrefix = SignPrefix\n\n/**\n * Signs the provided message with the given `peerId`\n *\n * @param {PeerId} peerId\n * @param {Message} message\n * @param {function(Error, Message)} callback\n * @returns {void}\n */\nmodule.exports.signMessage = function (peerId, message, callback) {\n  // Get the message in bytes, and prepend with the pubsub prefix\n  const bytes = Buffer.concat([\n    SignPrefix,\n    Message.encode(message)\n  ])\n\n  // Sign the bytes with the private key\n  peerId.privKey.sign(bytes, (err, signature) => {\n    if (err) return callback(err)\n\n    callback(null, {\n      ...message,\n      signature: signature,\n      key: peerId.pubKey.bytes\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}