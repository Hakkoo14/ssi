{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nfunction batch(_x, _x2) {\n  return _batch.apply(this, arguments);\n}\n\nfunction _batch() {\n  _batch = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source, size) {\n    var things, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, set;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            things = [];\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(source);\n\n          case 5:\n            _context.next = 7;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 7:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 11;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 11:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 24;\n              break;\n            }\n\n            set = _value;\n            things = things.concat(set);\n\n          case 15:\n            if (!(things.length >= size)) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 18;\n            return things.slice(0, size);\n\n          case 18:\n            things = things.slice(size);\n            _context.next = 15;\n            break;\n\n          case 21:\n            _iteratorNormalCompletion = true;\n            _context.next = 5;\n            break;\n\n          case 24:\n            _context.next = 30;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 30:\n            _context.prev = 30;\n            _context.prev = 31;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 35;\n              break;\n            }\n\n            _context.next = 35;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 35:\n            _context.prev = 35;\n\n            if (!_didIteratorError) {\n              _context.next = 38;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 38:\n            return _context.finish(35);\n\n          case 39:\n            return _context.finish(30);\n\n          case 40:\n            if (!things.length) {\n              _context.next = 46;\n              break;\n            }\n\n            _context.next = 43;\n            return things.slice(0, size);\n\n          case 43:\n            things = things.slice(size);\n            _context.next = 40;\n            break;\n\n          case 46:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 26, 30, 40], [31,, 35, 39]]);\n  }));\n  return _batch.apply(this, arguments);\n}\n\nmodule.exports = batch;","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/async-iterator-batch/index.js"],"names":["batch","source","size","things","set","concat","length","slice","module","exports"],"mappings":"AAAA;;;;;;;;;;SAEiBA,K;;;;;sEAAjB,iBAAwBC,MAAxB,EAAgCC,IAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACMC,YAAAA,MADN,GACe,EADf;AAAA;AAAA;AAAA;AAAA,uCAG0BF,MAH1B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAGmBG,YAAAA,GAHnB;AAIID,YAAAA,MAAM,GAAGA,MAAM,CAACE,MAAP,CAAcD,GAAd,CAAT;;AAJJ;AAAA,kBAMWD,MAAM,CAACG,MAAP,IAAiBJ,IAN5B;AAAA;AAAA;AAAA;;AAAA;AAOM,mBAAMC,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBL,IAAhB,CAAN;;AAPN;AASMC,YAAAA,MAAM,GAAGA,MAAM,CAACI,KAAP,CAAaL,IAAb,CAAT;AATN;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,iBAaSC,MAAM,CAACG,MAbhB;AAAA;AAAA;AAAA;;AAAA;AAcI,mBAAMH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBL,IAAhB,CAAN;;AAdJ;AAgBIC,YAAAA,MAAM,GAAGA,MAAM,CAACI,KAAP,CAAaL,IAAb,CAAT;AAhBJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAoBAM,MAAM,CAACC,OAAP,GAAiBT,KAAjB","sourcesContent":["'use strict'\n\nasync function * batch (source, size) {\n  let things = []\n\n  for await (const set of source) {\n    things = things.concat(set)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n"]},"metadata":{},"sourceType":"script"}