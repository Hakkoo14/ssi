{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('../../utils'),\n    sortBy = _require.sortBy;\n\nvar Entry = require('./entry');\n\nvar Wantlist = /*#__PURE__*/function () {\n  function Wantlist(stats) {\n    _classCallCheck(this, Wantlist);\n\n    this.set = new Map();\n    this._stats = stats;\n  }\n\n  _createClass(Wantlist, [{\n    key: \"length\",\n    get: function get() {\n      return this.set.size;\n    }\n  }, {\n    key: \"add\",\n    value: function add(cid, priority) {\n      var cidStr = cid.buffer.toString();\n      var entry = this.set.get(cidStr);\n\n      if (entry) {\n        entry.inc();\n        entry.priority = priority;\n      } else {\n        this.set.set(cidStr, new Entry(cid, priority));\n\n        if (this._stats) {\n          this._stats.push(null, 'wantListSize', 1);\n        }\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(cid) {\n      var cidStr = cid.buffer.toString();\n      var entry = this.set.get(cidStr);\n\n      if (!entry) {\n        return;\n      }\n\n      entry.dec(); // only delete when no refs are held\n\n      if (entry.hasRefs()) {\n        return;\n      }\n\n      this.set.delete(cidStr);\n\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', -1);\n      }\n    }\n  }, {\n    key: \"removeForce\",\n    value: function removeForce(cidStr) {\n      if (this.set.has(cidStr)) {\n        this.set.delete(cidStr);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      return this.set.forEach(fn);\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      return this.set.entries();\n    }\n  }, {\n    key: \"sortedEntries\",\n    value: function sortedEntries() {\n      return new Map(sortBy(function (o) {\n        return o[1].key;\n      }, Array.from(this.set.entries())));\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(cid) {\n      var cidStr = cid.buffer.toString();\n      return this.set.get(cidStr);\n    }\n  }]);\n\n  return Wantlist;\n}();\n\nWantlist.Entry = Entry;\nmodule.exports = Wantlist;","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/ipfs-bitswap/src/types/wantlist/index.js"],"names":["require","sortBy","Entry","Wantlist","stats","set","Map","_stats","size","cid","priority","cidStr","buffer","toString","entry","get","inc","push","dec","hasRefs","delete","has","fn","forEach","entries","o","key","Array","from","module","exports"],"mappings":"AAAA;;;;;;AAEA,eAAmBA,OAAO,CAAC,aAAD,CAA1B;AAAA,IAAQC,MAAR,YAAQA,MAAR;;AACA,IAAMC,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB;;IAEMG,Q;AACJ,oBAAaC,KAAb,EAAoB;AAAA;;AAClB,SAAKC,GAAL,GAAW,IAAIC,GAAJ,EAAX;AACA,SAAKC,MAAL,GAAcH,KAAd;AACD;;;;SAED,eAAc;AACZ,aAAO,KAAKC,GAAL,CAASG,IAAhB;AACD;;;WAED,aAAKC,GAAL,EAAUC,QAAV,EAAoB;AAClB,UAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAWC,QAAX,EAAf;AACA,UAAMC,KAAK,GAAG,KAAKT,GAAL,CAASU,GAAT,CAAaJ,MAAb,CAAd;;AAEA,UAAIG,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACE,GAAN;AACAF,QAAAA,KAAK,CAACJ,QAAN,GAAiBA,QAAjB;AACD,OAHD,MAGO;AACL,aAAKL,GAAL,CAASA,GAAT,CAAaM,MAAb,EAAqB,IAAIT,KAAJ,CAAUO,GAAV,EAAeC,QAAf,CAArB;;AACA,YAAI,KAAKH,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYU,IAAZ,CAAiB,IAAjB,EAAuB,cAAvB,EAAuC,CAAvC;AACD;AACF;AACF;;;WAED,gBAAQR,GAAR,EAAa;AACX,UAAME,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAWC,QAAX,EAAf;AACA,UAAMC,KAAK,GAAG,KAAKT,GAAL,CAASU,GAAT,CAAaJ,MAAb,CAAd;;AAEA,UAAI,CAACG,KAAL,EAAY;AACV;AACD;;AAEDA,MAAAA,KAAK,CAACI,GAAN,GARW,CAUX;;AACA,UAAIJ,KAAK,CAACK,OAAN,EAAJ,EAAqB;AACnB;AACD;;AAED,WAAKd,GAAL,CAASe,MAAT,CAAgBT,MAAhB;;AACA,UAAI,KAAKJ,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYU,IAAZ,CAAiB,IAAjB,EAAuB,cAAvB,EAAuC,CAAC,CAAxC;AACD;AACF;;;WAED,qBAAaN,MAAb,EAAqB;AACnB,UAAI,KAAKN,GAAL,CAASgB,GAAT,CAAaV,MAAb,CAAJ,EAA0B;AACxB,aAAKN,GAAL,CAASe,MAAT,CAAgBT,MAAhB;AACD;AACF;;;WAED,iBAASW,EAAT,EAAa;AACX,aAAO,KAAKjB,GAAL,CAASkB,OAAT,CAAiBD,EAAjB,CAAP;AACD;;;WAED,mBAAW;AACT,aAAO,KAAKjB,GAAL,CAASmB,OAAT,EAAP;AACD;;;WAED,yBAAiB;AACf,aAAO,IAAIlB,GAAJ,CAAQL,MAAM,CAAC,UAAAwB,CAAC;AAAA,eAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,GAAT;AAAA,OAAF,EAAgBC,KAAK,CAACC,IAAN,CAAW,KAAKvB,GAAL,CAASmB,OAAT,EAAX,CAAhB,CAAd,CAAP;AACD;;;WAED,kBAAUf,GAAV,EAAe;AACb,UAAME,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAWC,QAAX,EAAf;AACA,aAAO,KAAKR,GAAL,CAASU,GAAT,CAAaJ,MAAb,CAAP;AACD;;;;;;AAGHR,QAAQ,CAACD,KAAT,GAAiBA,KAAjB;AACA2B,MAAM,CAACC,OAAP,GAAiB3B,QAAjB","sourcesContent":["'use strict'\n\nconst { sortBy } = require('../../utils')\nconst Entry = require('./entry')\n\nclass Wantlist {\n  constructor (stats) {\n    this.set = new Map()\n    this._stats = stats\n  }\n\n  get length () {\n    return this.set.size\n  }\n\n  add (cid, priority) {\n    const cidStr = cid.buffer.toString()\n    const entry = this.set.get(cidStr)\n\n    if (entry) {\n      entry.inc()\n      entry.priority = priority\n    } else {\n      this.set.set(cidStr, new Entry(cid, priority))\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', 1)\n      }\n    }\n  }\n\n  remove (cid) {\n    const cidStr = cid.buffer.toString()\n    const entry = this.set.get(cidStr)\n\n    if (!entry) {\n      return\n    }\n\n    entry.dec()\n\n    // only delete when no refs are held\n    if (entry.hasRefs()) {\n      return\n    }\n\n    this.set.delete(cidStr)\n    if (this._stats) {\n      this._stats.push(null, 'wantListSize', -1)\n    }\n  }\n\n  removeForce (cidStr) {\n    if (this.set.has(cidStr)) {\n      this.set.delete(cidStr)\n    }\n  }\n\n  forEach (fn) {\n    return this.set.forEach(fn)\n  }\n\n  entries () {\n    return this.set.entries()\n  }\n\n  sortedEntries () {\n    return new Map(sortBy(o => o[1].key, Array.from(this.set.entries())))\n  }\n\n  contains (cid) {\n    const cidStr = cid.buffer.toString()\n    return this.set.get(cidStr)\n  }\n}\n\nWantlist.Entry = Entry\nmodule.exports = Wantlist\n"]},"metadata":{},"sourceType":"script"}