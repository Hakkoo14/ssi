{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar mfs = require('ipfs-mfs/core');\n\nvar isPullStream = require('is-pull-stream');\n\nvar toPullStream = require('async-iterator-to-pull-stream');\n\nvar toReadableStream = require('async-iterator-to-stream');\n\nvar pullStreamToAsyncIterator = require('pull-stream-to-async-iterator');\n\nvar all = require('async-iterator-all');\n\nvar callbackify = require('callbackify');\n\nvar PassThrough = require('stream').PassThrough;\n\nvar pull = require('pull-stream/pull');\n\nvar map = require('pull-stream/throughs/map');\n\nvar mapLsFile = function mapLsFile() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var long = options.long || options.l;\n  return function (file) {\n    return {\n      hash: long ? file.cid.toBaseEncodedString(options.cidBase) : '',\n      name: file.name,\n      type: long ? file.type : 0,\n      size: long ? file.size || 0 : 0\n    };\n  };\n};\n\nmodule.exports = function (self) {\n  var methods = mfs({\n    ipld: self._ipld,\n    blocks: self._blockService,\n    datastore: self._repo.root,\n    repoOwner: self._options.repoOwner\n  });\n  return {\n    cp: callbackify.variadic(methods.cp),\n    flush: callbackify.variadic(methods.flush),\n    ls: callbackify.variadic( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n        var options,\n            files,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                _context.next = 3;\n                return all(methods.ls(path, options));\n\n              case 3:\n                files = _context.sent;\n                return _context.abrupt(\"return\", files.map(mapLsFile(options)));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()),\n    lsReadableStream: function lsReadableStream(path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var stream = toReadableStream.obj(methods.ls(path, options));\n      var through = new PassThrough({\n        objectMode: true\n      });\n      stream.on('data', function (file) {\n        through.write(mapLsFile(options)(file));\n      });\n      stream.on('error', function (err) {\n        through.destroy(err);\n      });\n      stream.on('end', function (file, enc, cb) {\n        if (file) {\n          file = mapLsFile(options)(file);\n        }\n\n        through.end(file, enc, cb);\n      });\n      return through;\n    },\n    lsPullStream: function lsPullStream(path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return pull(toPullStream.source(methods.ls(path, options)), map(mapLsFile(options)));\n    },\n    mkdir: callbackify.variadic(methods.mkdir),\n    mv: callbackify.variadic(methods.mv),\n    read: callbackify( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path) {\n        var options,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                _context2.t0 = Buffer;\n                _context2.next = 4;\n                return all(methods.read(path, options));\n\n              case 4:\n                _context2.t1 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0.concat.call(_context2.t0, _context2.t1));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()),\n    readPullStream: function readPullStream(path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return toPullStream.source(methods.read(path, options));\n    },\n    readReadableStream: function readReadableStream(path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return toReadableStream(methods.read(path, options));\n    },\n    rm: callbackify.variadic(methods.rm),\n    stat: callbackify( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(path) {\n        var options,\n            stats,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                _context3.next = 3;\n                return methods.stat(path, options);\n\n              case 3:\n                stats = _context3.sent;\n                stats.hash = stats.cid.toBaseEncodedString(options && options.cidBase);\n                delete stats.cid;\n                return _context3.abrupt(\"return\", stats);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()),\n    write: callbackify.variadic( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path, content) {\n        var options,\n            _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n\n                if (isPullStream.isSource(content)) {\n                  content = pullStreamToAsyncIterator(content);\n                }\n\n                _context4.next = 4;\n                return methods.write(path, content, options);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }())\n  };\n};","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/ipfs/src/core/components/files-mfs.js"],"names":["mfs","require","isPullStream","toPullStream","toReadableStream","pullStreamToAsyncIterator","all","callbackify","PassThrough","pull","map","mapLsFile","options","long","l","file","hash","cid","toBaseEncodedString","cidBase","name","type","size","module","exports","self","methods","ipld","_ipld","blocks","_blockService","datastore","_repo","root","repoOwner","_options","cp","variadic","flush","ls","path","files","lsReadableStream","stream","obj","through","objectMode","on","write","err","destroy","enc","cb","end","lsPullStream","source","mkdir","mv","read","Buffer","concat","readPullStream","readReadableStream","rm","stat","stats","content","isSource"],"mappings":"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","sourcesContent":["'use strict'\n\nconst mfs = require('ipfs-mfs/core')\nconst isPullStream = require('is-pull-stream')\nconst toPullStream = require('async-iterator-to-pull-stream')\nconst toReadableStream = require('async-iterator-to-stream')\nconst pullStreamToAsyncIterator = require('pull-stream-to-async-iterator')\nconst all = require('async-iterator-all')\nconst callbackify = require('callbackify')\nconst PassThrough = require('stream').PassThrough\nconst pull = require('pull-stream/pull')\nconst map = require('pull-stream/throughs/map')\n\nconst mapLsFile = (options = {}) => {\n  const long = options.long || options.l\n\n  return (file) => {\n    return {\n      hash: long ? file.cid.toBaseEncodedString(options.cidBase) : '',\n      name: file.name,\n      type: long ? file.type : 0,\n      size: long ? file.size || 0 : 0\n    }\n  }\n}\n\nmodule.exports = self => {\n  const methods = mfs({\n    ipld: self._ipld,\n    blocks: self._blockService,\n    datastore: self._repo.root,\n    repoOwner: self._options.repoOwner\n  })\n\n  return {\n    cp: callbackify.variadic(methods.cp),\n    flush: callbackify.variadic(methods.flush),\n    ls: callbackify.variadic(async (path, options = {}) => {\n      const files = await all(methods.ls(path, options))\n\n      return files.map(mapLsFile(options))\n    }),\n    lsReadableStream: (path, options = {}) => {\n      const stream = toReadableStream.obj(methods.ls(path, options))\n      const through = new PassThrough({\n        objectMode: true\n      })\n      stream.on('data', (file) => {\n        through.write(mapLsFile(options)(file))\n      })\n      stream.on('error', (err) => {\n        through.destroy(err)\n      })\n      stream.on('end', (file, enc, cb) => {\n        if (file) {\n          file = mapLsFile(options)(file)\n        }\n\n        through.end(file, enc, cb)\n      })\n\n      return through\n    },\n    lsPullStream: (path, options = {}) => {\n      return pull(\n        toPullStream.source(methods.ls(path, options)),\n        map(mapLsFile(options))\n      )\n    },\n    mkdir: callbackify.variadic(methods.mkdir),\n    mv: callbackify.variadic(methods.mv),\n    read: callbackify(async (path, options = {}) => {\n      return Buffer.concat(await all(methods.read(path, options)))\n    }),\n    readPullStream: (path, options = {}) => {\n      return toPullStream.source(methods.read(path, options))\n    },\n    readReadableStream: (path, options = {}) => {\n      return toReadableStream(methods.read(path, options))\n    },\n    rm: callbackify.variadic(methods.rm),\n    stat: callbackify(async (path, options = {}) => {\n      const stats = await methods.stat(path, options)\n\n      stats.hash = stats.cid.toBaseEncodedString(options && options.cidBase)\n      delete stats.cid\n\n      return stats\n    }),\n    write: callbackify.variadic(async (path, content, options = {}) => {\n      if (isPullStream.isSource(content)) {\n        content = pullStreamToAsyncIterator(content)\n      }\n\n      await methods.write(path, content, options)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}