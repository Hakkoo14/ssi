{"ast":null,"code":"'use strict';\n\nvar nextTick = require('async/nextTick');\n\nvar _require = require('./errors'),\n    messages = _require.messages,\n    codes = _require.codes;\n\nvar FloodSub = require('libp2p-floodsub');\n\nvar errCode = require('err-code');\n\nmodule.exports = function (node) {\n  var floodSub = new FloodSub(node);\n  node._floodSub = floodSub;\n  return {\n    subscribe: function subscribe(topic, options, handler, callback) {\n      if (typeof options === 'function') {\n        callback = handler;\n        handler = options;\n        options = {};\n      }\n\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED));\n      }\n\n      function subscribe(cb) {\n        if (floodSub.listenerCount(topic) === 0) {\n          floodSub.subscribe(topic);\n        }\n\n        floodSub.on(topic, handler);\n        nextTick(cb);\n      }\n\n      subscribe(callback);\n    },\n    unsubscribe: function unsubscribe(topic, handler, callback) {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED));\n      }\n\n      if (!handler && !callback) {\n        floodSub.removeAllListeners(topic);\n      } else {\n        floodSub.removeListener(topic, handler);\n      }\n\n      if (floodSub.listenerCount(topic) === 0) {\n        floodSub.unsubscribe(topic);\n      }\n\n      if (typeof callback === 'function') {\n        nextTick(function () {\n          return callback();\n        });\n      }\n    },\n    publish: function publish(topic, data, callback) {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED));\n      }\n\n      if (!Buffer.isBuffer(data)) {\n        return nextTick(callback, errCode(new Error('data must be a Buffer'), 'ERR_DATA_IS_NOT_A_BUFFER'));\n      }\n\n      floodSub.publish(topic, data, callback);\n    },\n    ls: function ls(callback) {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED));\n      }\n\n      var subscriptions = Array.from(floodSub.subscriptions);\n      nextTick(function () {\n        return callback(null, subscriptions);\n      });\n    },\n    peers: function peers(topic, callback) {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED));\n      }\n\n      if (typeof topic === 'function') {\n        callback = topic;\n        topic = null;\n      }\n\n      var peers = Array.from(floodSub.peers.values()).filter(function (peer) {\n        return topic ? peer.topics.has(topic) : true;\n      }).map(function (peer) {\n        return peer.info.id.toB58String();\n      });\n      nextTick(function () {\n        return callback(null, peers);\n      });\n    },\n    setMaxListeners: function setMaxListeners(n) {\n      return floodSub.setMaxListeners(n);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/libp2p/src/pubsub.js"],"names":["nextTick","require","messages","codes","FloodSub","errCode","module","exports","node","floodSub","_floodSub","subscribe","topic","options","handler","callback","isStarted","started","Error","NOT_STARTED_YET","PUBSUB_NOT_STARTED","cb","listenerCount","on","unsubscribe","removeAllListeners","removeListener","publish","data","Buffer","isBuffer","ls","subscriptions","Array","from","peers","values","filter","peer","topics","has","map","info","id","toB58String","setMaxListeners","n"],"mappings":"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","sourcesContent":["'use strict'\n\nconst nextTick = require('async/nextTick')\nconst { messages, codes } = require('./errors')\nconst FloodSub = require('libp2p-floodsub')\n\nconst errCode = require('err-code')\n\nmodule.exports = (node) => {\n  const floodSub = new FloodSub(node)\n\n  node._floodSub = floodSub\n\n  return {\n    subscribe: (topic, options, handler, callback) => {\n      if (typeof options === 'function') {\n        callback = handler\n        handler = options\n        options = {}\n      }\n\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED))\n      }\n\n      function subscribe (cb) {\n        if (floodSub.listenerCount(topic) === 0) {\n          floodSub.subscribe(topic)\n        }\n\n        floodSub.on(topic, handler)\n        nextTick(cb)\n      }\n\n      subscribe(callback)\n    },\n\n    unsubscribe: (topic, handler, callback) => {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED))\n      }\n      if (!handler && !callback) {\n        floodSub.removeAllListeners(topic)\n      } else {\n        floodSub.removeListener(topic, handler)\n      }\n\n      if (floodSub.listenerCount(topic) === 0) {\n        floodSub.unsubscribe(topic)\n      }\n\n      if (typeof callback === 'function') {\n        nextTick(() => callback())\n      }\n    },\n\n    publish: (topic, data, callback) => {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED))\n      }\n\n      if (!Buffer.isBuffer(data)) {\n        return nextTick(callback, errCode(new Error('data must be a Buffer'), 'ERR_DATA_IS_NOT_A_BUFFER'))\n      }\n\n      floodSub.publish(topic, data, callback)\n    },\n\n    ls: (callback) => {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED))\n      }\n\n      const subscriptions = Array.from(floodSub.subscriptions)\n\n      nextTick(() => callback(null, subscriptions))\n    },\n\n    peers: (topic, callback) => {\n      if (!node.isStarted() && !floodSub.started) {\n        return nextTick(callback, errCode(new Error(messages.NOT_STARTED_YET), codes.PUBSUB_NOT_STARTED))\n      }\n\n      if (typeof topic === 'function') {\n        callback = topic\n        topic = null\n      }\n\n      const peers = Array.from(floodSub.peers.values())\n        .filter((peer) => topic ? peer.topics.has(topic) : true)\n        .map((peer) => peer.info.id.toB58String())\n\n      nextTick(() => callback(null, peers))\n    },\n\n    setMaxListeners (n) {\n      return floodSub.setMaxListeners(n)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}