{"ast":null,"code":"'use strict';\n\nvar utils = require('../../utils');\n\nvar errcode = require('err-code');\n\nmodule.exports = function (dht) {\n  var log = utils.logger(dht.peerInfo.id, 'rpc:put-value');\n  /**\n   * Process `PutValue` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n\n  return function putValue(peer, msg, callback) {\n    var key = msg.key;\n    log('key: %b', key);\n    var record = msg.record;\n\n    if (!record) {\n      var errMsg = \"Empty record from: \".concat(peer.id.toB58String());\n      log.error(errMsg);\n      return callback(errcode(new Error(errMsg), 'ERR_EMPTY_RECORD'));\n    }\n\n    dht._verifyRecordLocally(record, function (err) {\n      if (err) {\n        log.error(err.message);\n        return callback(err);\n      }\n\n      record.timeReceived = new Date();\n      var key = utils.bufferToKey(record.key);\n      dht.datastore.put(key, record.serialize(), function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, msg);\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/dd/Desktop/Project SSI/Major Project/client/node_modules/libp2p-kad-dht/src/rpc/handlers/put-value.js"],"names":["utils","require","errcode","module","exports","dht","log","logger","peerInfo","id","putValue","peer","msg","callback","key","record","errMsg","toB58String","error","Error","_verifyRecordLocally","err","message","timeReceived","Date","bufferToKey","datastore","put","serialize"],"mappings":"AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACxB,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAaF,GAAG,CAACG,QAAJ,CAAaC,EAA1B,EAA8B,eAA9B,CAAZ;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAO,SAASC,QAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,QAA9B,EAAwC;AAC7C,QAAMC,GAAG,GAAGF,GAAG,CAACE,GAAhB;AACAR,IAAAA,GAAG,CAAC,SAAD,EAAYQ,GAAZ,CAAH;AAEA,QAAMC,MAAM,GAAGH,GAAG,CAACG,MAAnB;;AAEA,QAAI,CAACA,MAAL,EAAa;AACX,UAAMC,MAAM,gCAAyBL,IAAI,CAACF,EAAL,CAAQQ,WAAR,EAAzB,CAAZ;AAEAX,MAAAA,GAAG,CAACY,KAAJ,CAAUF,MAAV;AACA,aAAOH,QAAQ,CAACX,OAAO,CAAC,IAAIiB,KAAJ,CAAUH,MAAV,CAAD,EAAoB,kBAApB,CAAR,CAAf;AACD;;AAEDX,IAAAA,GAAG,CAACe,oBAAJ,CAAyBL,MAAzB,EAAiC,UAACM,GAAD,EAAS;AACxC,UAAIA,GAAJ,EAAS;AACPf,QAAAA,GAAG,CAACY,KAAJ,CAAUG,GAAG,CAACC,OAAd;AACA,eAAOT,QAAQ,CAACQ,GAAD,CAAf;AACD;;AAEDN,MAAAA,MAAM,CAACQ,YAAP,GAAsB,IAAIC,IAAJ,EAAtB;AAEA,UAAMV,GAAG,GAAGd,KAAK,CAACyB,WAAN,CAAkBV,MAAM,CAACD,GAAzB,CAAZ;AAEAT,MAAAA,GAAG,CAACqB,SAAJ,CAAcC,GAAd,CAAkBb,GAAlB,EAAuBC,MAAM,CAACa,SAAP,EAAvB,EAA2C,UAACP,GAAD,EAAS;AAClD,YAAIA,GAAJ,EAAS;AACP,iBAAOR,QAAQ,CAACQ,GAAD,CAAf;AACD;;AAEDR,QAAAA,QAAQ,CAAC,IAAD,EAAOD,GAAP,CAAR;AACD,OAND;AAOD,KAjBD;AAkBD,GA/BD;AAgCD,CA3CD","sourcesContent":["'use strict'\n\nconst utils = require('../../utils')\nconst errcode = require('err-code')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:put-value')\n\n  /**\n   * Process `PutValue` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function putValue (peer, msg, callback) {\n    const key = msg.key\n    log('key: %b', key)\n\n    const record = msg.record\n\n    if (!record) {\n      const errMsg = `Empty record from: ${peer.id.toB58String()}`\n\n      log.error(errMsg)\n      return callback(errcode(new Error(errMsg), 'ERR_EMPTY_RECORD'))\n    }\n\n    dht._verifyRecordLocally(record, (err) => {\n      if (err) {\n        log.error(err.message)\n        return callback(err)\n      }\n\n      record.timeReceived = new Date()\n\n      const key = utils.bufferToKey(record.key)\n\n      dht.datastore.put(key, record.serialize(), (err) => {\n        if (err) {\n          return callback(err)\n        }\n\n        callback(null, msg)\n      })\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}