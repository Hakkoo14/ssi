{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _require = require('superstruct'),\n    struct = _require.struct,\n    superstruct = _require.superstruct;\n\nvar optional = struct.optional,\n    list = struct.list; // Define custom types\n\nvar s = superstruct({\n  types: {\n    transport: function transport(value) {\n      if (value.length === 0) return 'ERROR_EMPTY';\n      value.forEach(function (i) {\n        if (!i.dial) return 'ERR_NOT_A_TRANSPORT';\n      });\n      return true;\n    },\n    protector: function protector(value) {\n      if (!value.protect) return 'ERR_NOT_A_PROTECTOR';\n      return true;\n    }\n  }\n});\nvar modulesSchema = s({\n  connEncryption: optional(list([s('object|function')])),\n  // this is hacky to simulate optional because interface doesnt work correctly with it\n  // change to optional when fixed upstream\n  connProtector: s('undefined|protector'),\n  contentRouting: optional(list(['object'])),\n  dht: optional(s('null|function|object')),\n  peerDiscovery: optional(list([s('object|function')])),\n  peerRouting: optional(list(['object'])),\n  streamMuxer: optional(list([s('object|function')])),\n  transport: 'transport'\n});\nvar configSchema = s({\n  peerDiscovery: s('object', {\n    autoDial: true\n  }),\n  relay: s({\n    enabled: 'boolean',\n    hop: optional(s({\n      enabled: 'boolean',\n      active: 'boolean'\n    }, {\n      // HOP defaults\n      enabled: false,\n      active: false\n    }))\n  }, {\n    // Relay defaults\n    enabled: true\n  }),\n  // DHT config\n  dht: s('object?', {\n    // DHT defaults\n    enabled: false,\n    kBucketSize: 20,\n    randomWalk: {\n      enabled: false,\n      // disabled waiting for https://github.com/libp2p/js-libp2p-kad-dht/issues/86\n      queriesPerPeriod: 1,\n      interval: 300e3,\n      timeout: 10e3\n    }\n  }),\n  // Experimental config\n  EXPERIMENTAL: s({\n    pubsub: 'boolean'\n  }, {\n    // Experimental defaults\n    pubsub: false\n  })\n}, {});\nvar optionsSchema = s({\n  switch: 'object?',\n  connectionManager: s('object', {\n    minPeers: 25\n  }),\n  datastore: 'object?',\n  peerInfo: 'object',\n  peerBook: 'object?',\n  modules: modulesSchema,\n  config: configSchema\n});\n\nmodule.exports.validate = function (opts) {\n  var _optionsSchema$valida = optionsSchema.validate(opts),\n      _optionsSchema$valida2 = _slicedToArray(_optionsSchema$valida, 2),\n      error = _optionsSchema$valida2[0],\n      options = _optionsSchema$valida2[1]; // Improve errors throwed, reduce stack by throwing here and add reason to the message\n\n\n  if (error) {\n    throw new Error(\"\".concat(error.message).concat(error.reason ? ' - ' + error.reason : ''));\n  } else {\n    // Throw when dht is enabled but no dht module provided\n    if (options.config.dht.enabled) {\n      s('function|object')(options.modules.dht);\n    }\n  }\n\n  if (options.config.peerDiscovery.autoDial === undefined) {\n    options.config.peerDiscovery.autoDial = true;\n  }\n\n  return options;\n};","map":{"version":3,"sources":["C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/libp2p/src/config.js"],"names":["require","struct","superstruct","optional","list","s","types","transport","value","length","forEach","i","dial","protector","protect","modulesSchema","connEncryption","connProtector","contentRouting","dht","peerDiscovery","peerRouting","streamMuxer","configSchema","autoDial","relay","enabled","hop","active","kBucketSize","randomWalk","queriesPerPeriod","interval","timeout","EXPERIMENTAL","pubsub","optionsSchema","switch","connectionManager","minPeers","datastore","peerInfo","peerBook","modules","config","module","exports","validate","opts","error","options","Error","message","reason","undefined"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { struct, superstruct } = require('superstruct')\nconst { optional, list } = struct\n\n// Define custom types\nconst s = superstruct({\n  types: {\n    transport: value => {\n      if (value.length === 0) return 'ERROR_EMPTY'\n      value.forEach(i => {\n        if (!i.dial) return 'ERR_NOT_A_TRANSPORT'\n      })\n      return true\n    },\n    protector: value => {\n      if (!value.protect) return 'ERR_NOT_A_PROTECTOR'\n      return true\n    }\n  }\n})\n\nconst modulesSchema = s({\n  connEncryption: optional(list([s('object|function')])),\n  // this is hacky to simulate optional because interface doesnt work correctly with it\n  // change to optional when fixed upstream\n  connProtector: s('undefined|protector'),\n  contentRouting: optional(list(['object'])),\n  dht: optional(s('null|function|object')),\n  peerDiscovery: optional(list([s('object|function')])),\n  peerRouting: optional(list(['object'])),\n  streamMuxer: optional(list([s('object|function')])),\n  transport: 'transport'\n})\n\nconst configSchema = s({\n  peerDiscovery: s('object', {\n    autoDial: true\n  }),\n  relay: s({\n    enabled: 'boolean',\n    hop: optional(s({\n      enabled: 'boolean',\n      active: 'boolean'\n    }, {\n      // HOP defaults\n      enabled: false,\n      active: false\n    }))\n  }, {\n    // Relay defaults\n    enabled: true\n  }),\n  // DHT config\n  dht: s('object?', {\n    // DHT defaults\n    enabled: false,\n    kBucketSize: 20,\n    randomWalk: {\n      enabled: false, // disabled waiting for https://github.com/libp2p/js-libp2p-kad-dht/issues/86\n      queriesPerPeriod: 1,\n      interval: 300e3,\n      timeout: 10e3\n    }\n  }),\n  // Experimental config\n  EXPERIMENTAL: s({\n    pubsub: 'boolean'\n  }, {\n    // Experimental defaults\n    pubsub: false\n  })\n}, {})\n\nconst optionsSchema = s({\n  switch: 'object?',\n  connectionManager: s('object', {\n    minPeers: 25\n  }),\n  datastore: 'object?',\n  peerInfo: 'object',\n  peerBook: 'object?',\n  modules: modulesSchema,\n  config: configSchema\n})\n\nmodule.exports.validate = (opts) => {\n  const [error, options] = optionsSchema.validate(opts)\n\n  // Improve errors throwed, reduce stack by throwing here and add reason to the message\n  if (error) {\n    throw new Error(`${error.message}${error.reason ? ' - ' + error.reason : ''}`)\n  } else {\n    // Throw when dht is enabled but no dht module provided\n    if (options.config.dht.enabled) {\n      s('function|object')(options.modules.dht)\n    }\n  }\n\n  if (options.config.peerDiscovery.autoDial === undefined) {\n    options.config.peerDiscovery.autoDial = true\n  }\n\n  return options\n}\n"]},"metadata":{},"sourceType":"script"}