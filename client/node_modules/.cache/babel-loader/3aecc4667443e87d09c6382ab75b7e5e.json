{"ast":null,"code":"'use strict';\n\nvar bsplit = require('buffer-split');\n\nvar errcode = require('err-code');\n/**\n * Select the best record out of the given records.\n *\n * @param {Object} selectors\n * @param {Buffer} k\n * @param {Array<Buffer>} records\n * @returns {number} - The index of the best record.\n */\n\n\nvar bestRecord = function bestRecord(selectors, k, records) {\n  if (records.length === 0) {\n    var errMsg = \"No records given\";\n    throw errcode(new Error(errMsg), 'ERR_NO_RECORDS_RECEIVED');\n  }\n\n  var parts = bsplit(k, Buffer.from('/'));\n\n  if (parts.length < 3) {\n    var _errMsg = \"Record key does not have a selector function\";\n    throw errcode(new Error(_errMsg), 'ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY');\n  }\n\n  var selector = selectors[parts[1].toString()];\n\n  if (!selector) {\n    var _errMsg2 = \"Unrecognized key prefix: \".concat(parts[1]);\n\n    throw errcode(new Error(_errMsg2), 'ERR_UNRECOGNIZED_KEY_PREFIX');\n  }\n\n  return selector(k, records);\n};\n\nmodule.exports = {\n  bestRecord: bestRecord,\n  selectors: require('./selectors')\n};","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/libp2p-record/src/selection.js"],"names":["bsplit","require","errcode","bestRecord","selectors","k","records","length","errMsg","Error","parts","Buffer","from","selector","toString","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAYC,CAAZ,EAAeC,OAAf,EAA2B;AAC5C,MAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,QAAMC,MAAM,qBAAZ;AAEA,UAAMN,OAAO,CAAC,IAAIO,KAAJ,CAAUD,MAAV,CAAD,EAAoB,yBAApB,CAAb;AACD;;AAED,MAAME,KAAK,GAAGV,MAAM,CAACK,CAAD,EAAIM,MAAM,CAACC,IAAP,CAAY,GAAZ,CAAJ,CAApB;;AAEA,MAAIF,KAAK,CAACH,MAAN,GAAe,CAAnB,EAAsB;AACpB,QAAMC,OAAM,iDAAZ;AAEA,UAAMN,OAAO,CAAC,IAAIO,KAAJ,CAAUD,OAAV,CAAD,EAAoB,yCAApB,CAAb;AACD;;AAED,MAAMK,QAAQ,GAAGT,SAAS,CAACM,KAAK,CAAC,CAAD,CAAL,CAASI,QAAT,EAAD,CAA1B;;AAEA,MAAI,CAACD,QAAL,EAAe;AACb,QAAML,QAAM,sCAA+BE,KAAK,CAAC,CAAD,CAApC,CAAZ;;AAEA,UAAMR,OAAO,CAAC,IAAIO,KAAJ,CAAUD,QAAV,CAAD,EAAoB,6BAApB,CAAb;AACD;;AAED,SAAOK,QAAQ,CAACR,CAAD,EAAIC,OAAJ,CAAf;AACD,CAxBD;;AA0BAS,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,UAAU,EAAEA,UADG;AAEfC,EAAAA,SAAS,EAAEH,OAAO,CAAC,aAAD;AAFH,CAAjB","sourcesContent":["'use strict'\n\nconst bsplit = require('buffer-split')\nconst errcode = require('err-code')\n\n/**\n * Select the best record out of the given records.\n *\n * @param {Object} selectors\n * @param {Buffer} k\n * @param {Array<Buffer>} records\n * @returns {number} - The index of the best record.\n */\nconst bestRecord = (selectors, k, records) => {\n  if (records.length === 0) {\n    const errMsg = `No records given`\n\n    throw errcode(new Error(errMsg), 'ERR_NO_RECORDS_RECEIVED')\n  }\n\n  const parts = bsplit(k, Buffer.from('/'))\n\n  if (parts.length < 3) {\n    const errMsg = `Record key does not have a selector function`\n\n    throw errcode(new Error(errMsg), 'ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY')\n  }\n\n  const selector = selectors[parts[1].toString()]\n\n  if (!selector) {\n    const errMsg = `Unrecognized key prefix: ${parts[1]}`\n\n    throw errcode(new Error(errMsg), 'ERR_UNRECOGNIZED_KEY_PREFIX')\n  }\n\n  return selector(k, records)\n}\n\nmodule.exports = {\n  bestRecord: bestRecord,\n  selectors: require('./selectors')\n}\n"]},"metadata":{},"sourceType":"script"}