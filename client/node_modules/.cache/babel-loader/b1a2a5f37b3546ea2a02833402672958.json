{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar UnixFS = require('ipfs-unixfs');\n\nvar persist = require('../utils/persist');\n\nvar _require = require('ipld-dag-pb'),\n    DAGNode = _require.DAGNode;\n\nvar dirBuilder = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item, ipld, options) {\n    var unixfs, node, cid, path;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            unixfs = new UnixFS('directory');\n            node = DAGNode.create(unixfs.marshal(), []);\n            _context.next = 4;\n            return persist(node, ipld, options);\n\n          case 4:\n            cid = _context.sent;\n            path = item.path;\n            return _context.abrupt(\"return\", {\n              cid: cid,\n              path: path,\n              unixfs: unixfs,\n              node: node\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function dirBuilder(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = dirBuilder;","map":{"version":3,"sources":["C:/Users/gkhakurel/Downloads/Poject-main/Poject-main/client/node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js"],"names":["UnixFS","require","persist","DAGNode","dirBuilder","item","ipld","options","unixfs","node","create","marshal","cid","path","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;AACA,eAEIA,OAAO,CAAC,aAAD,CAFX;AAAA,IACEE,OADF,YACEA,OADF;;AAIA,IAAMC,UAAU;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,IAAb,EAAmBC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,MADW,GACF,IAAIR,MAAJ,CAAW,WAAX,CADE;AAEXS,YAAAA,IAFW,GAEJN,OAAO,CAACO,MAAR,CAAeF,MAAM,CAACG,OAAP,EAAf,EAAiC,EAAjC,CAFI;AAAA;AAAA,mBAGCT,OAAO,CAACO,IAAD,EAAOH,IAAP,EAAaC,OAAb,CAHR;;AAAA;AAGXK,YAAAA,GAHW;AAIbC,YAAAA,IAJa,GAINR,IAAI,CAACQ,IAJC;AAAA,6CAMV;AACLD,cAAAA,GAAG,EAAHA,GADK;AAELC,cAAAA,IAAI,EAAJA,IAFK;AAGLL,cAAAA,MAAM,EAANA,MAHK;AAILC,cAAAA,IAAI,EAAJA;AAJK,aANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAcAU,MAAM,CAACC,OAAP,GAAiBX,UAAjB","sourcesContent":["'use strict'\n\nconst UnixFS = require('ipfs-unixfs')\nconst persist = require('../utils/persist')\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\n\nconst dirBuilder = async (item, ipld, options) => {\n  const unixfs = new UnixFS('directory')\n  const node = DAGNode.create(unixfs.marshal(), [])\n  const cid = await persist(node, ipld, options)\n  let path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    node\n  }\n}\n\nmodule.exports = dirBuilder\n"]},"metadata":{},"sourceType":"script"}