{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"D:/Poject-main/Poject-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar debug = require('debug');\n\nvar multihashing = require('multihashing-async');\n\nvar mh = require('multihashes');\n\nvar Key = require('interface-datastore').Key;\n\nvar base32 = require('base32.js');\n\nvar distance = require('xor-distance');\n\nvar map = require('async/map');\n\nvar Record = require('libp2p-record').Record;\n\nvar setImmediate = require('async/setImmediate');\n\nvar PeerId = require('peer-id');\n\nvar errcode = require('err-code');\n/**\n * Creates a DHT ID by hashing a given buffer.\n *\n * @param {Buffer} buf\n * @param {function(Error, Buffer)} callback\n * @returns {void}\n */\n\n\nexports.convertBuffer = function (buf, callback) {\n  multihashing.digest(buf, 'sha2-256', callback);\n};\n/**\n * Creates a DHT ID by hashing a Peer ID\n *\n * @param {PeerId} peer\n * @param {function(Error, Buffer)} callback\n * @returns {void}\n */\n\n\nexports.convertPeerId = function (peer, callback) {\n  multihashing.digest(peer.id, 'sha2-256', callback);\n};\n/**\n * Convert a buffer to their SHA2-256 hash.\n *\n * @param {Buffer} buf\n * @returns {Key}\n */\n\n\nexports.bufferToKey = function (buf) {\n  return new Key('/' + exports.encodeBase32(buf), false);\n};\n/**\n * Generate the key for a public key.\n *\n * @param {PeerId} peer\n * @returns {Buffer}\n */\n\n\nexports.keyForPublicKey = function (peer) {\n  return Buffer.concat([Buffer.from('/pk/'), peer.id]);\n};\n\nexports.isPublicKeyKey = function (key) {\n  return key.slice(0, 4).toString() === '/pk/';\n};\n\nexports.fromPublicKeyKey = function (key) {\n  return new PeerId(key.slice(4));\n};\n/**\n * Get the current time as timestamp.\n *\n * @returns {number}\n */\n\n\nexports.now = function () {\n  return Date.now();\n};\n/**\n * Encode a given buffer into a base32 string.\n * @param {Buffer} buf\n * @returns {string}\n */\n\n\nexports.encodeBase32 = function (buf) {\n  var enc = new base32.Encoder();\n  return enc.write(buf).finalize();\n};\n/**\n * Decode a given base32 string into a buffer.\n * @param {string} raw\n * @returns {Buffer}\n */\n\n\nexports.decodeBase32 = function (raw) {\n  var dec = new base32.Decoder();\n  return Buffer.from(dec.write(raw).finalize());\n};\n/**\n * Sort peers by distance to the given `target`.\n *\n * @param {Array<PeerId>} peers\n * @param {Buffer} target\n * @param {function(Error, Array<PeerId>)} callback\n * @returns {void}\n */\n\n\nexports.sortClosestPeers = function (peers, target, callback) {\n  map(peers, function (peer, cb) {\n    exports.convertPeerId(peer, function (err, id) {\n      if (err) {\n        return cb(err);\n      }\n\n      cb(null, {\n        peer: peer,\n        distance: distance(id, target)\n      });\n    });\n  }, function (err, distances) {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(null, distances.sort(exports.xorCompare).map(function (d) {\n      return d.peer;\n    }));\n  });\n};\n/**\n * Compare function to sort an array of elements which have a distance property which is the xor distance to a given element.\n *\n * @param {Object} a\n * @param {Object} b\n * @returns {number}\n */\n\n\nexports.xorCompare = function (a, b) {\n  return distance.compare(a.distance, b.distance);\n};\n/**\n * Computes how many results to collect on each disjoint path, rounding up.\n * This ensures that we look for at least one result per path.\n *\n * @param {number} resultsWanted\n * @param {number} numPaths - total number of paths\n * @returns {number}\n */\n\n\nexports.pathSize = function (resultsWanted, numPaths) {\n  return Math.ceil(resultsWanted / numPaths);\n};\n/**\n * Create a new put record, encodes and signs it if enabled.\n *\n * @param {Buffer} key\n * @param {Buffer} value\n * @param {function(Error, Buffer)} callback\n * @returns {void}\n */\n\n\nexports.createPutRecord = function (key, value, callback) {\n  var timeReceived = new Date();\n  var rec = new Record(key, value, timeReceived);\n  setImmediate(function () {\n    callback(null, rec.serialize());\n  });\n};\n/**\n * Creates a logger for the given subsystem\n *\n * @param {PeerId} [id]\n * @param {string} [subsystem]\n * @returns {debug}\n *\n * @private\n */\n\n\nexports.logger = function (id, subsystem) {\n  var name = ['libp2p', 'dht'];\n\n  if (subsystem) {\n    name.push(subsystem);\n  }\n\n  if (id) {\n    name.push(\"\".concat(id.toB58String().slice(0, 8)));\n  } // Add a formatter for converting to a base58 string\n\n\n  debug.formatters.b = function (v) {\n    return mh.toB58String(v);\n  };\n\n  var logger = debug(name.join(':'));\n  logger.error = debug(name.concat(['error']).join(':'));\n  return logger;\n};\n\nexports.TimeoutError = /*#__PURE__*/function (_Error) {\n  _inherits(TimeoutError, _Error);\n\n  var _super = _createSuper(TimeoutError);\n\n  function TimeoutError() {\n    _classCallCheck(this, TimeoutError);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TimeoutError, [{\n    key: \"code\",\n    get: function get() {\n      return 'ETIMEDOUT';\n    }\n  }]);\n\n  return TimeoutError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Creates an async function that calls the given `asyncFn` and Errors\n * if it does not resolve within `time` ms\n *\n * @param {Function} [asyncFn]\n * @param {Number} [time]\n * @returns {Function}\n *\n * @private\n */\n\n\nexports.withTimeout = function (asyncFn, time) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", Promise.race([asyncFn.apply(void 0, _args), new Promise(function (resolve, reject) {\n              setTimeout(function () {\n                reject(errcode(new Error('Async function did not complete before timeout'), 'ETIMEDOUT'));\n              }, time);\n            })]));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};","map":{"version":3,"sources":["D:/Poject-main/Poject-main/client/node_modules/libp2p-kad-dht/src/utils.js"],"names":["debug","require","multihashing","mh","Key","base32","distance","map","Record","setImmediate","PeerId","errcode","exports","convertBuffer","buf","callback","digest","convertPeerId","peer","id","bufferToKey","encodeBase32","keyForPublicKey","Buffer","concat","from","isPublicKeyKey","key","slice","toString","fromPublicKeyKey","now","Date","enc","Encoder","write","finalize","decodeBase32","raw","dec","Decoder","sortClosestPeers","peers","target","cb","err","distances","sort","xorCompare","d","a","b","compare","pathSize","resultsWanted","numPaths","Math","ceil","createPutRecord","value","timeReceived","rec","serialize","logger","subsystem","name","push","toB58String","formatters","v","join","error","TimeoutError","Error","withTimeout","asyncFn","time","Promise","race","resolve","reject","setTimeout"],"mappings":"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","sourcesContent":["'use strict'\n\nconst debug = require('debug')\nconst multihashing = require('multihashing-async')\nconst mh = require('multihashes')\nconst Key = require('interface-datastore').Key\nconst base32 = require('base32.js')\nconst distance = require('xor-distance')\nconst map = require('async/map')\nconst Record = require('libp2p-record').Record\nconst setImmediate = require('async/setImmediate')\nconst PeerId = require('peer-id')\nconst errcode = require('err-code')\n\n/**\n * Creates a DHT ID by hashing a given buffer.\n *\n * @param {Buffer} buf\n * @param {function(Error, Buffer)} callback\n * @returns {void}\n */\nexports.convertBuffer = (buf, callback) => {\n  multihashing.digest(buf, 'sha2-256', callback)\n}\n\n/**\n * Creates a DHT ID by hashing a Peer ID\n *\n * @param {PeerId} peer\n * @param {function(Error, Buffer)} callback\n * @returns {void}\n */\nexports.convertPeerId = (peer, callback) => {\n  multihashing.digest(peer.id, 'sha2-256', callback)\n}\n\n/**\n * Convert a buffer to their SHA2-256 hash.\n *\n * @param {Buffer} buf\n * @returns {Key}\n */\nexports.bufferToKey = (buf) => {\n  return new Key('/' + exports.encodeBase32(buf), false)\n}\n\n/**\n * Generate the key for a public key.\n *\n * @param {PeerId} peer\n * @returns {Buffer}\n */\nexports.keyForPublicKey = (peer) => {\n  return Buffer.concat([\n    Buffer.from('/pk/'),\n    peer.id\n  ])\n}\n\nexports.isPublicKeyKey = (key) => {\n  return key.slice(0, 4).toString() === '/pk/'\n}\n\nexports.fromPublicKeyKey = (key) => {\n  return new PeerId(key.slice(4))\n}\n\n/**\n * Get the current time as timestamp.\n *\n * @returns {number}\n */\nexports.now = () => {\n  return Date.now()\n}\n\n/**\n * Encode a given buffer into a base32 string.\n * @param {Buffer} buf\n * @returns {string}\n */\nexports.encodeBase32 = (buf) => {\n  const enc = new base32.Encoder()\n  return enc.write(buf).finalize()\n}\n\n/**\n * Decode a given base32 string into a buffer.\n * @param {string} raw\n * @returns {Buffer}\n */\nexports.decodeBase32 = (raw) => {\n  const dec = new base32.Decoder()\n  return Buffer.from(dec.write(raw).finalize())\n}\n\n/**\n * Sort peers by distance to the given `target`.\n *\n * @param {Array<PeerId>} peers\n * @param {Buffer} target\n * @param {function(Error, Array<PeerId>)} callback\n * @returns {void}\n */\nexports.sortClosestPeers = (peers, target, callback) => {\n  map(peers, (peer, cb) => {\n    exports.convertPeerId(peer, (err, id) => {\n      if (err) {\n        return cb(err)\n      }\n\n      cb(null, {\n        peer: peer,\n        distance: distance(id, target)\n      })\n    })\n  }, (err, distances) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, distances.sort(exports.xorCompare).map((d) => d.peer))\n  })\n}\n\n/**\n * Compare function to sort an array of elements which have a distance property which is the xor distance to a given element.\n *\n * @param {Object} a\n * @param {Object} b\n * @returns {number}\n */\nexports.xorCompare = (a, b) => {\n  return distance.compare(a.distance, b.distance)\n}\n\n/**\n * Computes how many results to collect on each disjoint path, rounding up.\n * This ensures that we look for at least one result per path.\n *\n * @param {number} resultsWanted\n * @param {number} numPaths - total number of paths\n * @returns {number}\n */\nexports.pathSize = (resultsWanted, numPaths) => {\n  return Math.ceil(resultsWanted / numPaths)\n}\n\n/**\n * Create a new put record, encodes and signs it if enabled.\n *\n * @param {Buffer} key\n * @param {Buffer} value\n * @param {function(Error, Buffer)} callback\n * @returns {void}\n */\nexports.createPutRecord = (key, value, callback) => {\n  const timeReceived = new Date()\n  const rec = new Record(key, value, timeReceived)\n\n  setImmediate(() => {\n    callback(null, rec.serialize())\n  })\n}\n\n/**\n * Creates a logger for the given subsystem\n *\n * @param {PeerId} [id]\n * @param {string} [subsystem]\n * @returns {debug}\n *\n * @private\n */\nexports.logger = (id, subsystem) => {\n  const name = ['libp2p', 'dht']\n  if (subsystem) {\n    name.push(subsystem)\n  }\n  if (id) {\n    name.push(`${id.toB58String().slice(0, 8)}`)\n  }\n\n  // Add a formatter for converting to a base58 string\n  debug.formatters.b = (v) => {\n    return mh.toB58String(v)\n  }\n\n  const logger = debug(name.join(':'))\n  logger.error = debug(name.concat(['error']).join(':'))\n\n  return logger\n}\n\nexports.TimeoutError = class TimeoutError extends Error {\n  get code () {\n    return 'ETIMEDOUT'\n  }\n}\n\n/**\n * Creates an async function that calls the given `asyncFn` and Errors\n * if it does not resolve within `time` ms\n *\n * @param {Function} [asyncFn]\n * @param {Number} [time]\n * @returns {Function}\n *\n * @private\n */\nexports.withTimeout = (asyncFn, time) => {\n  return async (...args) => {\n    return Promise.race([\n      asyncFn(...args),\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          reject(errcode(new Error('Async function did not complete before timeout'), 'ETIMEDOUT'))\n        }, time)\n      })\n    ])\n  }\n}\n"]},"metadata":{},"sourceType":"script"}